#coding:utf-8
from operator import mod
import random
import datetime
import time
import calendar
import pickle
import re
import os
import hashlib
import uuid
import json as js

def encrypt(string):
    news = []
    for s in string:
        news.append(chr(ord(s)-30))

    return ''.join(news)

def decrypt(string):
    news = []
    for s in string:
        news.append(chr(ord(s)+30))

    return ''.join(news)


def sleep(seconds):
    time.sleep(seconds)

def getZodiac(idcard):
    zodiacs = ["鼠","牛","虎","兔","龙","蛇","马","羊","猴","鸡","狗","猪"]
    year = str(idcard)[6:10]
    index = mod(int(year)-4,12) + 1
    zodiac = zodiacs[index-1]
    return zodiac

def getSex(idcard,type="english"):
    sex = None
    sexNum = str(idcard)[-2]
    if int(sexNum) % 2 == 0:
        if type == "chinese":
            sex = "女"
        else:
            sex = "female"
    else:
        if type == "chinese":
            sex = "男"
        else:
            sex = "male"
    return sex

def getIdentifyNum(idnum):
    """输入身份证前17位，返回校验码"""
    Wi = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2]
    IndexTable = {
        0: '1',
        1: '0',
        2: 'X',
        3: '9',
        4: '8',
        5: '7',
        6: '6',
        7: '5',
        8: '4',
        9: '3',
        10: '2'
    }
    No = []
    sum = 0
    No = list(str(idnum))

    for i in range(17):
        sum = sum + (int(No[i]) * Wi[i])

    Index = sum % 11
    return IndexTable[Index]

def waitUntil(func,waitTime,interval=2,*args,**kwargs):
    start = time.time()
    isbreak = False
    while not func(*args,**kwargs):
        if time.time() - start >= waitTime:
            isbreak = True
            break
        time.sleep(interval)
    else:
        return func(*args,**kwargs)

    raise Exception("等待超时,方法:%s,超时时间:%s" %(func,waitTime))

alias = {
    1:"chinese",
    2:"abc",
    3:"int",
    4:"symbol",
    5:"float"
}

def rint(length=10):
    a = eval("1" + "0"*(length-1))
    b = eval("1" + "0"*length) - 1
    return random.randint(a,b)

def randomName(length=2):
    first = random.sample(firstnames,1)[0]
    last = random.sample(lastnames,1)[0]
    return "%s%s" %(first,last)

def randomCity():
    return random.sample(citys,1)[0]

def randomCollege():
    return random.sample(colleges,1)[0]

def randomInt(length):
    if isinstance(length,int):
        if length:
            return rint(length)
        else:
            return ''
    elif isinstance(length,tuple) and length[0] < length[1]:
        min = rint(length[0])
        max = rint(length[1])
        return random.randint(min,max)
    else:
        assert 1==2,"参数类型错误,请使用int或tuple类型"

def randomFloat(length):
    if isinstance(length,int):
        if length < 3:
            length = 3
        number = str(randomInt(length-1))
        index = random.randint(1,length-2)
        nlist = list(number)
        nlist.insert(index,'.')
        return float(''.join(nlist))
    else:
        return "length only support type:int"

def randomPhoneNum():
    phonepres = [
        134,135,136,137,138,139,150,151,152,157,158,159,182,183,184,187,188,
        178,147,130,131,132,155,156,185,186,176,145,133,153,180,181,189 ,177
    ]
    pre = random.sample(phonepres,1)[0]
    after = randomInt(8)
    return "%s%s" %(pre,after)

def randomTelecomNum(format="%s%s"):
    pre = random.sample(telecoms,1)[0]
    after = randomInt(8)
    return format %(pre,after)

def randomABC(length):
    abc = ""
    abcs = [chr(i) for i in range(65,91) + range(97,123)]
    min,max = None,None
    if isinstance(length,int):
        pass
    elif isinstance(length,tuple):
        length = random.sample(range(length[0],length[1]+1),1)[0]
    else:
        assert 1 == 2, "参数类型错误,请使用int或tuple类型"
    for i in range(length):
        abc += random.sample(abcs,1)[0]

    return abc

def randomEmail(length):
    if isinstance(length,int):
        if length < 7:
            length = 7
    elif isinstance(length,tuple):
        if length[0] < 7:
            length[0] = 7
        length = random.sample(range(length[0],length[1]),1)[0]
    else:
        assert 1 == 2,"参数类型错误,请使用int或tuple类型"
    length = length - 5
    randstr = randomABC(length)
    randno = random.randint(1,length-1)
    return "%s@%s.com" %(randstr[:randno],randstr[randno:])

def randomChinese(length):
    start,end = (0x4E00, 0x9FA5)
    chineseStrs = [unichr(codepoint) for codepoint in range(int(start),int(end))]
    chinesestr = ""
    if isinstance(length,int):
        pass
    elif isinstance(length,tuple):
        length = random.sample(range(length[0],length[1]+1),1)[0]
    else:
        assert 1 == 2, "参数类型错误,请使用int或tuple类型"
    for i in range(length):
        chinesestr += random.sample(chineseStrs,1)[0]

    return chinesestr

def randomSymbol(length):
    symbol = ""
    symbols = [chr(i) for i in range(35,47) + range(58,65) + range(93,97) + range(123,127)]
    if isinstance(length,int):
        pass
    elif isinstance(length,tuple):
        length = random.sample(range(length[0],length[1]+1),1)[0]
    else:
        assert 1 == 2, "参数类型错误,请使用int或tuple类型"
    for i in range(length):
        symbol += random.sample(symbols,1)[0]

    return symbol

def randomIDCard(age=None,sex=None):
    id = codelist[random.randint(0, len(codelist))]  # 地区项
    if age:
        now = time.strftime("%Y%m%d")
        t = time.strptime(now, "%Y%m%d")
        if t.tm_mon == 1 and t.tm_mday == 1:
            age += 1
            month,day = 1,1
        elif t.tm_mon == 1:
            month, day = 1, random.randint(1,t.tm_mday-1)
        else:
            month,day = random.randint(1,t.tm_mon-1),random.randint(1,t.tm_mday-1 or 1)

        # if month == t.tm_mon and day == t.tm_mday:
        #     month = month - 1
        month = "0%s" %month if month < 10 else str(month)
        day = "0%s" %day if day < 10 else str(day)
        ymd = autodate(1, "%s%s%s" %(t.tm_year,month,day), -age, "year")
        id = id + ymd
    else:
        id = id + str(random.randint(1930, 2016))  # 年份项
        da = datetime.date.today() + datetime.timedelta(days=random.randint(1, 366))  # 月份和日期项
        id = id + da.strftime('%m%d')
    id = id + str(random.randint(10, 99))  # ，顺序号简单处理
    if sex:
        if isinstance(sex,int):
            id = id + str(sex)
        elif sex == "男":
            id = id + str(1)
        elif sex == "女":
            id = id + str(2)
        else:
            id = id + randomSample(["0", "1"])
    else:
        id = id + randomSample(["0","1"])
    id = id + getIdentifyNum(id)
    return id


def randomSample(samples):
    return random.sample(samples,1)[0]


def randomMix(length):
    rstring = ""
    alen = len(alias)
    ave,left = length/alen,length%alen
    if ave > 0:
        for k in alias.keys():
            rstring += str(js.loads(js.dumps(autodata(type=alias[k],length=ave),encoding='utf-8',ensure_ascii=False)))
        rstring += str(js.loads(js.dumps(autodata(type="symbol",length=left),encoding='utf-8',ensure_ascii=False)))
    else:
        for k in alias.keys():
            if length != 0:
                rstring += str(js.loads(js.dumps(autodata(type=alias[k],length=1),encoding='utf-8',ensure_ascii=False)))
            length -= 1
    return rstring


def predit_format(sample):
    if len(sample) == 10 and not sample.isdigit():
        return "%Y-%m-%d"

    if len(sample) == 8 and sample.isdigit():
        return "%Y%m%d"

    if len(sample) == 19 and not sample.isdigit():
        return "%Y-%m-%d %H:%M:%S"

    if len(sample) == 14 and sample.isdigit():
        return "%Y%m%d%H%M%S"

    assert 1 == 2, "暂不支持的日期格式"


def unique(length):
    return uuid.uuid1().hex


def autodata(type=None,samples=[],length=(7,10),age=None,sex=None):
    #data中使用，检查点方法注解指定data，根据data自动生成测试数据
    datastr = ""
    if type == "phone":
        return randomPhoneNum()
    if type == "telecom":
        return randomTelecomNum()
    elif type == "name":
        return randomName(length)
    elif type == "city":
        return randomCity()
    elif type == "college":
        return randomCollege()
    elif type == "email":
        return randomEmail(length=length)
    elif type == "chinese":
        return randomChinese(length=length)
    elif type == "abc":
        return randomABC(length=length)
    elif type == "int":
        return randomInt(length=length)
    elif type == "float":
        return randomFloat(length=length)
    elif type == "symbol":
        return randomSymbol(length=length)
    elif type == "idcard":
        return randomIDCard(age=age,sex=sex)
    elif type == "sample":
        return randomSample(samples)
    elif type == "mix":
        return randomMix(length=length)
    elif type == "unique":
        return unique(length=length)
    elif type in alias.keys():
        return autodata(type=alias[type],length=length)
    else:
        return ""


def autodate(counter,start,step,datetype,informat=None,outformat=None):
    step = counter*step
    outdate = None
    if not informat:
        informat = predit_format(start)
    if not outformat:
        outformat = predit_format(start)
    if start == "2014-01-11 00:00:00":
        start = time.strftime("%Y-%m-%d %H:%M:%S")
    elif start == "2014-01-11":
        start = time.strftime("%Y-%m-%d")
    t = time.strptime(start,informat)
    tmpdate = datetime.datetime(t.tm_year,t.tm_mon,t.tm_mday,t.tm_hour,t.tm_min,t.tm_sec)
    if datetype == "week":
        outdate = tmpdate + datetime.timedelta(weeks=step)
    elif datetype == "day":
        outdate = tmpdate + datetime.timedelta(days=step)
    elif datetype == "hour":
        outdate = tmpdate + datetime.timedelta(hours=step)
    elif datetype == "minute":
        outdate = tmpdate + datetime.timedelta(minutes=step)
    elif datetype == "second":
        outdate = tmpdate + datetime.timedelta(seconds=step)
    elif datetype == "month":
        month = tmpdate.month -1 + step
        year = tmpdate.year + month/12
        month = month % 12 + 1
        day = min(tmpdate.day,calendar.monthrange(year,month)[1])
        outdate = tmpdate.replace(year=year,month=month,day=day,hour=t.tm_hour,minute=t.tm_min,second=t.tm_sec)
    elif datetype == "year":
        outdate = tmpdate.replace(year=t.tm_year+step)

    if outformat != "timestamp":
        return outdate.strftime(outformat)
    else:
        return str(int((outdate - datetime.datetime(1970,1,1)).total_seconds()) * 1000)


def autoint(counter,start,step):
    return int(start) + counter*int(step)

def autoDataStrList(predatalist):
    dataStrList = []
    for dataStr in predatalist:
        lenlist_all = {}
        for i in re.finditer(r"(autodata\(type='\w+',(length=\((\d+,\d+)\))\))",dataStr):
            matchStr, rlength, length = i.groups()
            if length:
                ilength = eval(length)
                if ilength[1] - ilength[0] > 1:
                    mid_len = random.randint(ilength[0]+1,ilength[1]-1)
                else:
                    mid_len = ilength[0]
                lenlist = [ilength[0], mid_len, ilength[1]]
                lenlist_all[matchStr] = [rlength,lenlist]

        all_matchStr = re.findall(r"(autodata\(type='\w+',length=\((\d+,\d+)\)\))",dataStr)
        #print all_matchStr
        if all_matchStr:
            for i in range(3):
                data = dataStr
                for matchStr in all_matchStr:
                    #print matchStr[0]
                    rlength,lenlist = lenlist_all[matchStr[0]]
                    lenstr = "length=%s" %lenlist[i]
                    imatchStr = matchStr[0].replace(rlength,lenstr)
                    data = data.replace(matchStr[0],imatchStr)

                dataStrList.append(data)
        else:
            dataStrList.append(dataStr)

    return dataStrList

def genData(dataStr,count=15):
    flags_int,flags_date = {},{}
    #正则替换autoint
    for i in re.finditer(r"(autoint\((\d+),(['\-',\d]+),flag='(\w+)'\))",dataStr):
        matchStr,start,step,flag = i.groups()
        if flag not in flags_int.keys():
            flags_int[flag] = 0
        else:
            flags_int[flag] += 1
        auto_int = autoint(flags_int[flag],start,step)
        dataStr = dataStr.replace(matchStr,str(auto_int),1)
    #正则替换autodate  (\d{4}\-\d{1,2}\-\d{1,2}( \d{2}:\d{2}:\d{2})?)
    for i in re.finditer(r"(autodate\('(\d{4}\-\d{1,2}\-\d{1,2}( \d{2}:\d{2}:\d{2})?)',(['\-',\d]+)(,datetype='(\w+)')?(,informat='(['%','Y','m','d','H','M','S','/',' ','\-','\:']+)')?(,outformat='(['%','Y','m','d','H','M','S','/',' ','\-','\:'|timestamp]+)')?(,flag='(\w+)')?\))",dataStr):
        matchStr,start,_,step,_,datetype,_,informat,_,outformat,_,flag = i.groups()
        if not flag:
            flag = 'nowaytobethesame'
        if flag not in flags_date.keys():
            flags_date[flag] = 0
        else:
            flags_date[flag] += 1
        auto_date = autodate(flags_date[flag],start,int(step),datetype,informat=informat,outformat=outformat)
        dataStr = dataStr.replace(matchStr,auto_date,1)

    predatalist = []
    datalist = []
    all_match_list = []
    # 将所有all类型的模板节点，用alias中值类型进行替换，数据长度不做处理，生成一个不带all类型的模板数据list
    for i in re.finditer(r"(autodata\(type='all'(,length=((\d+)?(\(\d+,\d+\))?)?)?\))",dataStr):
        matchStr,_,_,_,_ = i.groups()
        all_match_list.append(matchStr)

    if all_match_list:
        for itype in alias.values():
            if len(predatalist) == count:
                break
            data = dataStr
            for matchStr in all_match_list:
                deal_matchStr = matchStr.replace("all", itype)
                data = data.replace(matchStr, deal_matchStr)
            predatalist.append(data)
    else:
        predatalist.append(dataStr)

    # 由上面生成的不带all类型的模板数据list，各类型均取长度最大、最小和中间值三种情况的数据，生成一个各类型均指定了长度的新的数据模板list
    dataStrList = autoDataStrList(predatalist)
    # 将数据模板list中的模板语句替换成随机值后返回
    for dataStr in dataStrList:
        data = dataStr
        #for i in re.finditer(r"(autodata\(type='(\w+)'(,length=((\d+)+)?)?\) ?(\|\| ?setenv\('(\w+)'\))?)", dataStr):
        for i in re.finditer(r"(autodata\(type='(\w+)'(,age=(\w+))?(,sex=(\w+))?(,samples=(\[('[^,]+',?)+\]))?(,length=((\d+)+)?)?\) ?(\|\| ?setenv\('(\w+)'\))?)", dataStr):
            matchStr,itype, _,age,_,sex,_,samples,_,_, length, _, envStr,envName = i.groups()
            rangedStr = None
            evalStr = matchStr
            try:
                if envStr and envName:
                    evalStr = evalStr.replace(envStr, "")
                    rangedStr = str(eval(evalStr))
                    setenv(envName,rangedStr)
                else:
                    rangedStr = str(eval(evalStr))
            except AssertionError as e:
                print 1111,e
                rangedStr = evalStr

            data = data.replace(matchStr, rangedStr, 1)
        try:
            real_data = js.loads(data)
        except Exception as e:
            print e
            print 1111111,data
        datalist.append(real_data)

    return datalist

def setenv(name,value):
    if os.path.isfile("env.pkl"):
        a = None
        with open("env.pkl", "rb") as f:
            a = pickle.load(f)
            a[name] = value
        with open("env.pkl","wb") as f:
            pickle.dump(a,f)
    else:
        with open("env.pkl","wb") as f:
            a = {name: value}
            pickle.dump(a, f)

def getenv(name):
    if os.path.isfile("env.pkl"):
        try:
            with open("env.pkl","rb") as f:
                a = pickle.load(f)
                return a[name] if name in a.keys() else ""
        except Exception as e:
            print "warning:",str(e)
    else:
        return ""

def deallist(data):
    """解析模板数据中类型为list的节点，生成指定长度的新list数据模板"""
    for key,value in data.items():
        if type(value) == list and len(value) == 2 and type(value[1]) == int:
            subvalue,count = value[0],value[1]
            if type(count) != int:
                continue
            news = []
            for index in range(count):
                if type(subvalue) == dict:
                    subvalue = deallist(subvalue)
                news.append(subvalue)
            data[key] = news
        elif type(value) == dict:
            data[key] = deallist(value)
    else:
        return data

def md5(string):
    m = hashlib.md5()
    m.update(string)
    return m.hexdigest()


codelist = [
'110000', '110100', '110101', '110102', '110105', '110106', '110107', '110108', '110109', '110111', '110112', '110113', '110114', '110115', '110116', '110117', '110200', '110228', '110229', '120000', '120100', '120101', '120102', '120103', '120104', '120105', '120106', '120110', '120111', '120112', '120113', '120114', '120115', '120116', '120117', '120118', '120200', '120225', '130000', '130100', '130101', '130102', '130104', '130105', '130107', '130108', '130109', '130110', '130111', '130121', '130123', '130125', '130126', '130127', '130128', '130129', '130130', '130131', '130132', '130133', '130183', '130184', '130200', '130201', '130202', '130203', '130204', '130205', '130207', '130208', '130209', '130223', '130224', '130225', '130227', '130229', '130281', '130283', '130300', '130301', '130302', '130303', '130304', '130306', '130321', '130322', '130324', '130400', '130401', '130402', '130403', '130404', '130406', '130421', '130423', '130424', '130425', '130426', '130427', '130428', '130429', '130430', '130431', '130432', '130433', '130434', '130435', '130481', '130500', '130501', '130502', '130503', '130521', '130522', '130523', '130524', '130525', '130526', '130527', '130528', '130529', '130530', '130531', '130532', '130533', '130534', '130535', '130581', '130582', '130600', '130601', '130602', '130606', '130607', '130608', '130609', '130623', '130624', '130626', '130627', '130628', '130629', '130630', '130631', '130632', '130633', '130634', '130635', '130636', '130637', '130638', '130681', '130683', '130684', '130700', '130701', '130702', '130703', '130705', '130706', '130721', '130722', '130723', '130724', '130725', '130726', '130727', '130728', '130729', '130730', '130731', '130732', '130733', '130800', '130801', '130802', '130803', '130804', '130821', '130822', '130823', '130824', '130825', '130826', '130827', '130828', '130900', '130901', '130902', '130903', '130921', '130922', '130923', '130924', '130925', '130926', '130927', '130928', '130929', '130930', '130981', '130982', '130983', '130984', '131000', '131001', '131002', '131003', '131022', '131023', '131024', '131025', '131026', '131028', '131081', '131082', '131100', '131101', '131102', '131121', '131122', '131123', '131124', '131125', '131126', '131127', '131128', '131181', '131182', '139000', '139001', '139002', '140000', '140100', '140101', '140105', '140106', '140107', '140108', '140109', '140110', '140121', '140122', '140123', '140181', '140200', '140201', '140202', '140203', '140211', '140212', '140221', '140222', '140223', '140224', '140225', '140226', '140227', '140300', '140301', '140302', '140303', '140311', '140321', '140322', '140400', '140401', '140402', '140411', '140421', '140423', '140424', '140425', '140426', '140427', '140428', '140429', '140430', '140431', '140481', '140500', '140501', '140502', '140521', '140522', '140524', '140525', '140581', '140600', '140601', '140602', '140603', '140621', '140622', '140623', '140624', '140700', '140701', '140702', '140721', '140722', '140723', '140724', '140725', '140726', '140727', '140728', '140729', '140781', '140800', '140801', '140802', '140821', '140822', '140823', '140824', '140825', '140826', '140827', '140828', '140829', '140830', '140881', '140882', '140900', '140901', '140902', '140921', '140922', '140923', '140924', '140925', '140926', '140927', '140928', '140929', '140930', '140931', '140932', '140981', '141000', '141001', '141002', '141021', '141022', '141023', '141024', '141025', '141026', '141027', '141028', '141029', '141030', '141031', '141032', '141033', '141034', '141081', '141082', '141100', '141101', '141102', '141121', '141122', '141123', '141124', '141125', '141126', '141127', '141128', '141129', '141130', '141181', '141182', '150000', '150100', '150101', '150102', '150103', '150104', '150105', '150121', '150122', '150123', '150124', '150125', '150200', '150201', '150202', '150203', '150204', '150205', '150206', '150207', '150221', '150222', '150223', '150300', '150301', '150302', '150303', '150304', '150400', '150401', '150402', '150403', '150404', '150421', '150422', '150423', '150424', '150425', '150426', '150428', '150429', '150430', '150500', '150501', '150502', '150521', '150522', '150523', '150524', '150525', '150526', '150581', '150600', '150601', '150602', '150621', '150622', '150623', '150624', '150625', '150626', '150627', '150700', '150701', '150702', '150703', '150721', '150722', '150723', '150724', '150725', '150726', '150727', '150781', '150782', '150783', '150784', '150785', '150800', '150801', '150802', '150821', '150822', '150823', '150824', '150825', '150826', '150900', '150901', '150902', '150921', '150922', '150923', '150924', '150925', '150926', '150927', '150928', '150929', '150981', '152200', '152201', '152202', '152221', '152222', '152223', '152224', '152500', '152501', '152502', '152522', '152523', '152524', '152525', '152526', '152527', '152528', '152529', '152530', '152531', '152900', '152921', '152922', '152923', '210000', '210100', '210101', '210102', '210103', '210104', '210105', '210106', '210111', '210112', '210113', '210114', '210122', '210123', '210124', '210181', '210200', '210201', '210202', '210203', '210204', '210211', '210212', '210213', '210224', '210281', '210282', '210283', '210300', '210301', '210302', '210303', '210304', '210311', '210321', '210323', '210381', '210400', '210401', '210402', '210403', '210404', '210411', '210421', '210422', '210423', '210500', '210501', '210502', '210503', '210504', '210505', '210521', '210522', '210600', '210601', '210602', '210603', '210604', '210624', '210681', '210682', '210700', '210701', '210702', '210703', '210711', '210726', '210727', '210781', '210782', '210800', '210801', '210802', '210803', '210804', '210811', '210881', '210882', '210900', '210901', '210902', '210903', '210904', '210905', '210911', '210921', '210922', '211000', '211001', '211002', '211003', '211004', '211005', '211011', '211021', '211081', '211100', '211101', '211102', '211103', '211121', '211122', '211200', '211201', '211202', '211204', '211221', '211223', '211224', '211281', '211282', '211300', '211301', '211302', '211303', '211321', '211322', '211324', '211381', '211382', '211400', '211401', '211402', '211403', '211404', '211421', '211422', '211481', '220000', '220100', '220101', '220102', '220103', '220104', '220105', '220106', '220112', '220113', '220122', '220182', '220183', '220200', '220201', '220202', '220203', '220204', '220211', '220221', '220281', '220282', '220283', '220284', '220300', '220301', '220302', '220303', '220322', '220323', '220381', '220382', '220400', '220401', '220402', '220403', '220421', '220422', '220500', '220501', '220502', '220503', '220521', '220523', '220524', '220581', '220582', '220600', '220601', '220602', '220605', '220621', '220622', '220623', '220681', '220700', '220701', '220702', '220721', '220722', '220723', '220781', '220800', '220801', '220802', '220821', '220822', '220881', '220882', '222400', '222401', '222402', '222403', '222404', '222405', '222406', '222424', '222426', '230000', '230100', '230101', '230102', '230103', '230104', '230108', '230109', '230110', '230111', '230112', '230113', '230123', '230124', '230125', '230126', '230127', '230128', '230129', '230183', '230184', '230200', '230201', '230202', '230203', '230204', '230205', '230206', '230207', '230208', '230221', '230223', '230224', '230225', '230227', '230229', '230230', '230231', '230281', '230300', '230301', '230302', '230303', '230304', '230305', '230306', '230307', '230321', '230381', '230382', '230400', '230401', '230402', '230403', '230404', '230405', '230406', '230407', '230421', '230422', '230500', '230501', '230502', '230503', '230505', '230506', '230521', '230522', '230523', '230524', '230600', '230601', '230602', '230603', '230604', '230605', '230606', '230621', '230622', '230623', '230624', '230700', '230701', '230702', '230703', '230704', '230705', '230706', '230707', '230708', '230709', '230710', '230711', '230712', '230713', '230714', '230715', '230716', '230722', '230781', '230800', '230801', '230803', '230804', '230805', '230811', '230822', '230826', '230828', '230833', '230881', '230882', '230900', '230901', '230902', '230903', '230904', '230921', '231000', '231001', '231002', '231003', '231004', '231005', '231024', '231025', '231081', '231083', '231084', '231085', '231100', '231101', '231102', '231121', '231123', '231124', '231181', '231182', '231200', '231201', '231202', '231221', '231222', '231223', '231224', '231225', '231226', '231281', '231282', '231283', '232700', '232721', '232722', '232723', '310000', '310100', '310101', '310104', '310105', '310106', '310107', '310108', '310109', '310110', '310112', '310113', '310114', '310115', '310116', '310117', '310118', '310120', '310200', '310230', '320000', '320100', '320101', '320102', '320104', '320105', '320106', '320111', '320113', '320114', '320115', '320116', '320117', '320118', '320200', '320201', '320202', '320203', '320204', '320205', '320206', '320211', '320281', '320282', '320300', '320301', '320302', '320303', '320305', '320311', '320312', '320321', '320322', '320324', '320381', '320382', '320400', '320401', '320402', '320404', '320411', '320412', '320413', '320481', '320500', '320501', '320505', '320506', '320507', '320508', '320509', '320581', '320582', '320583', '320585', '320600', '320601', '320602', '320611', '320612', '320621', '320623', '320681', '320682', '320684', '320700', '320701', '320703', '320706', '320707', '320722', '320723', '320724', '320800', '320801', '320802', '320803', '320804', '320811', '320826', '320829', '320830', '320831', '320900', '320901', '320902', '320903', '320904', '320921', '320922', '320923', '320924', '320925', '320981', '321000', '321001', '321002', '321003', '321012', '321023', '321081', '321084', '321100', '321101', '321102', '321111', '321112', '321181', '321182', '321183', '321200', '321201', '321202', '321203', '321204', '321281', '321282', '321283', '321300', '321301', '321302', '321311', '321322', '321323', '321324', '330000', '330100', '330101', '330102', '330103', '330104', '330105', '330106', '330108', '330109', '330110', '330111', '330122', '330127', '330182', '330185', '330200', '330201', '330203', '330204', '330205', '330206', '330211', '330212', '330225', '330226', '330281', '330282', '330283', '330300', '330301', '330302', '330303', '330304', '330305', '330324', '330326', '330327', '330328', '330329', '330381', '330382', '330400', '330401', '330402', '330411', '330421', '330424', '330481', '330482', '330483', '330500', '330501', '330502', '330503', '330521', '330522', '330523', '330600', '330601', '330602', '330603', '330604', '330624', '330681', '330683', '330700', '330701', '330702', '330703', '330723', '330726', '330727', '330781', '330782', '330783', '330784', '330800', '330801', '330802', '330803', '330822', '330824', '330825', '330881', '330900', '330901', '330902', '330903', '330921', '330922', '331000', '331001', '331002', '331003', '331004', '331021', '331022', '331023', '331024', '331081', '331082', '331100', '331101', '331102', '331121', '331122', '331123', '331124', '331125', '331126', '331127', '331181', '340000', '340100', '340101', '340102', '340103', '340104', '340111', '340121', '340122', '340123', '340124', '340181', '340200', '340201', '340202', '340203', '340207', '340208', '340221', '340222', '340223', '340225', '340300', '340301', '340302', '340303', '340304', '340311', '340321', '340322', '340323', '340400', '340401', '340402', '340403', '340404', '340405', '340406', '340421', '340500', '340501', '340503', '340504', '340506', '340521', '340522', '340523', '340600', '340601', '340602', '340603', '340604', '340621', '340700', '340701', '340702', '340703', '340711', '340721', '340800', '340801', '340802', '340803', '340811', '340822', '340823', '340824', '340825', '340826', '340827', '340828', '340881', '341000', '341001', '341002', '341003', '341004', '341021', '341022', '341023', '341024', '341100', '341101', '341102', '341103', '341122', '341124', '341125', '341126', '341181', '341182', '341200', '341201', '341202', '341203', '341204', '341221', '341222', '341225', '341226', '341282', '341300', '341301', '341302', '341321', '341322', '341323', '341324', '341500', '341501', '341502', '341503', '341521', '341522', '341523', '341524', '341525', '341600', '341601', '341602', '341621', '341622', '341623', '341700', '341701', '341702', '341721', '341722', '341723', '341800', '341801', '341802', '341821', '341822', '341823', '341824', '341825', '341881', '350000', '350100', '350101', '350102', '350103', '350104', '350105', '350111', '350121', '350122', '350123', '350124', '350125', '350128', '350181', '350182', '350200', '350201', '350203', '350205', '350206', '350211', '350212', '350213', '350300', '350301', '350302', '350303', '350304', '350305', '350322', '350400', '350401', '350402', '350403', '350421', '350423', '350424', '350425', '350426', '350427', '350428', '350429', '350430', '350481', '350500', '350501', '350502', '350503', '350504', '350505', '350521', '350524', '350525', '350526', '350527', '350581', '350582', '350583', '350600', '350601', '350602', '350603', '350622', '350623', '350624', '350625', '350626', '350627', '350628', '350629', '350681', '350700', '350701', '350702', '350703', '350721', '350722', '350723', '350724', '350725', '350781', '350782', '350783', '350800', '350801', '350802', '350803', '350821', '350823', '350824', '350825', '350881', '350900', '350901', '350902', '350921', '350922', '350923', '350924', '350925', '350926', '350981', '350982', '360000', '360100', '360101', '360102', '360103', '360104', '360105', '360111', '360112', '360121', '360123', '360124', '360200', '360201', '360202', '360203', '360222', '360281', '360300', '360301', '360302', '360313', '360321', '360322', '360323', '360400', '360401', '360402', '360403', '360421', '360423', '360424', '360425', '360426', '360427', '360428', '360429', '360430', '360481', '360482', '360500', '360501', '360502', '360521', '360600', '360601', '360602', '360622', '360681', '360700', '360701', '360702', '360703', '360721', '360722', '360723', '360724', '360725', '360726', '360727', '360728', '360729', '360730', '360731', '360732', '360733', '360734', '360735', '360781', '360800', '360801', '360802', '360803', '360821', '360822', '360823', '360824', '360825', '360826', '360827', '360828', '360829', '360830', '360881', '360900', '360901', '360902', '360921', '360922', '360923', '360924', '360925', '360926', '360981', '360982', '360983', '361000', '361001', '361002', '361021', '361022', '361023', '361024', '361025', '361026', '361027', '361028', '361029', '361030', '361100', '361101', '361102', '361103', '361121', '361123', '361124', '361125', '361126', '361127', '361128', '361129', '361130', '361181', '370000', '370100', '370101', '370102', '370103', '370104', '370105', '370112', '370113', '370124', '370125', '370126', '370181', '370200', '370201', '370202', '370203', '370211', '370212', '370213', '370214', '370281', '370282', '370283', '370285', '370300', '370301', '370302', '370303', '370304', '370305', '370306', '370321', '370322', '370323', '370400', '370401', '370402', '370403', '370404', '370405', '370406', '370481', '370500', '370501', '370502', '370503', '370521', '370522', '370523', '370600', '370601', '370602', '370611', '370612', '370613', '370634', '370681', '370682', '370683', '370684', '370685', '370686', '370687', '370700', '370701', '370702', '370703', '370704', '370705', '370724', '370725', '370781', '370782', '370783', '370784', '370785', '370786', '370800', '370801', '370811', '370812', '370826', '370827', '370828', '370829', '370830', '370831', '370832', '370881', '370883', '370900', '370901', '370902', '370911', '370921', '370923', '370982', '370983', '371000', '371001', '371002', '371003', '371082', '371083', '371100', '371101', '371102', '371103', '371121', '371122', '371200', '371201', '371202', '371203', '371300', '371301', '371302', '371311', '371312', '371321', '371322', '371323', '371324', '371325', '371326', '371327', '371328', '371329', '371400', '371401', '371402', '371403', '371422', '371423', '371424', '371425', '371426', '371427', '371428', '371481', '371482', '371500', '371501', '371502', '371521', '371522', '371523', '371524', '371525', '371526', '371581', '371600', '371601', '371602', '371603', '371621', '371622', '371623', '371625', '371626', '371700', '371701', '371702', '371721', '371722', '371723', '371724', '371725', '371726', '371727', '371728', '410000', '410100', '410101', '410102', '410103', '410104', '410105', '410106', '410108', '410122', '410181', '410182', '410183', '410184', '410185', '410200', '410201', '410202', '410203', '410204', '410205', '410211', '410212', '410221', '410222', '410223', '410225', '410300', '410301', '410302', '410303', '410304', '410305', '410306', '410311', '410322', '410323', '410324', '410325', '410326', '410327', '410328', '410329', '410381', '410400', '410401', '410402', '410403', '410404', '410411', '410421', '410422', '410423', '410425', '410481', '410482', '410500', '410501', '410502', '410503', '410505', '410506', '410522', '410523', '410526', '410527', '410581', '410600', '410601', '410602', '410603', '410611', '410621', '410622', '410700', '410701', '410702', '410703', '410704', '410711', '410721', '410724', '410725', '410726', '410727', '410728', '410781', '410782', '410800', '410801', '410802', '410803', '410804', '410811', '410821', '410822', '410823', '410825', '410882', '410883', '410900', '410901', '410902', '410922', '410923', '410926', '410927', '410928', '411000', '411001', '411002', '411023', '411024', '411025', '411081', '411082', '411100', '411101', '411102', '411103', '411104', '411121', '411122', '411200', '411201', '411202', '411221', '411222', '411224', '411281', '411282', '411300', '411301', '411302', '411303', '411321', '411322', '411323', '411324', '411325', '411326', '411327', '411328', '411329', '411330', '411381', '411400', '411401', '411402', '411403', '411421', '411422', '411423', '411424', '411425', '411426', '411481', '411500', '411501', '411502', '411503', '411521', '411522', '411523', '411524', '411525', '411526', '411527', '411528', '411600', '411601', '411602', '411621', '411622', '411623', '411624', '411625', '411626', '411627', '411628', '411681', '411700', '411701', '411702', '411721', '411722', '411723', '411724', '411725', '411726', '411727', '411728', '411729', '419000', '419001', '420000', '420100', '420101', '420102', '420103', '420104', '420105', '420106', '420107', '420111', '420112', '420113', '420114', '420115', '420116', '420117', '420200', '420201', '420202', '420203', '420204', '420205', '420222', '420281', '420300', '420301', '420302', '420303', '420304', '420322', '420323', '420324', '420325', '420381', '420500', '420501', '420502', '420503', '420504', '420505', '420506', '420525', '420526', '420527', '420528', '420529', '420581', '420582', '420583', '420600', '420601', '420602', '420606', '420607', '420624', '420625', '420626', '420682', '420683', '420684', '420700', '420701', '420702', '420703', '420704', '420800', '420801', '420802', '420804', '420821', '420822', '420881', '420900', '420901', '420902', '420921', '420922', '420923', '420981', '420982', '420984', '421000', '421001', '421002', '421003', '421022', '421023', '421024', '421081', '421083', '421087', '421100', '421101', '421102', '421121', '421122', '421123', '421124', '421125', '421126', '421127', '421181', '421182', '421200', '421201', '421202', '421221', '421222', '421223', '421224', '421281', '421300', '421301', '421303', '421321', '421381', '422800', '422801', '422802', '422822', '422823', '422825', '422826', '422827', '422828', '429000', '429004', '429005', '429006', '429021', '430000', '430100', '430101', '430102', '430103', '430104', '430105', '430111', '430112', '430121', '430124', '430181', '430200', '430201', '430202', '430203', '430204', '430211', '430221', '430223', '430224', '430225', '430281', '430300', '430301', '430302', '430304', '430321', '430381', '430382', '430400', '430401', '430405', '430406', '430407', '430408', '430412', '430421', '430422', '430423', '430424', '430426', '430481', '430482', '430500', '430501', '430502', '430503', '430511', '430521', '430522', '430523', '430524', '430525', '430527', '430528', '430529', '430581', '430600', '430601', '430602', '430603', '430611', '430621', '430623', '430624', '430626', '430681', '430682', '430700', '430701', '430702', '430703', '430721', '430722', '430723', '430724', '430725', '430726', '430781', '430800', '430801', '430802', '430811', '430821', '430822', '430900', '430901', '430902', '430903', '430921', '430922', '430923', '430981', '431000', '431001', '431002', '431003', '431021', '431022', '431023', '431024', '431025', '431026', '431027', '431028', '431081', '431100', '431101', '431102', '431103', '431121', '431122', '431123', '431124', '431125', '431126', '431127', '431128', '431129', '431200', '431201', '431202', '431221', '431222', '431223', '431224', '431225', '431226', '431227', '431228', '431229', '431230', '431281', '431300', '431301', '431302', '431321', '431322', '431381', '431382', '433100', '433101', '433122', '433123', '433124', '433125', '433126', '433127', '433130', '440000', '440100', '440101', '440103', '440104', '440105', '440106', '440111', '440112', '440113', '440114', '440115', '440117', '440118', '440200', '440201', '440203', '440204', '440205', '440222', '440224', '440229', '440232', '440233', '440281', '440282', '440300', '440301', '440303', '440304', '440305', '440306', '440307', '440308', '440400', '440401', '440402', '440403', '440404', '440500', '440501', '440507', '440511', '440512', '440513', '440514', '440515', '440523', '440600', '440601', '440604', '440605', '440606', '440607', '440608', '440700', '440701', '440703', '440704', '440705', '440781', '440783', '440784', '440785', '440800', '440801', '440802', '440803', '440804', '440811', '440823', '440825', '440881', '440882', '440883', '440900', '440901', '440902', '440904', '440981', '440982', '440983', '441200', '441201', '441202', '441203', '441204', '441223', '441224', '441225', '441226', '441284', '441300', '441301', '441302', '441303', '441322', '441323', '441324', '441400', '441401', '441402', '441403', '441422', '441423', '441424', '441426', '441427', '441481', '441500', '441501', '441502', '441521', '441523', '441581', '441600', '441601', '441602', '441621', '441622', '441623', '441624', '441625', '441700', '441701', '441702', '441704', '441721', '441781', '441800', '441801', '441802', '441803', '441821', '441823', '441825', '441826', '441881', '441882', '441900', '442000', '445100', '445101', '445102', '445103', '445122', '445200', '445201', '445202', '445203', '445222', '445224', '445281', '445300', '445301', '445302', '445303', '445321', '445322', '445381', '450000', '450100', '450101', '450102', '450103', '450105', '450107', '450108', '450109', '450110', '450123', '450124', '450125', '450126', '450127', '450200', '450201', '450202', '450203', '450204', '450205', '450221', '450222', '450223', '450224', '450225', '450226', '450300', '450301', '450302', '450303', '450304', '450305', '450311', '450312', '450321', '450323', '450324', '450325', '450326', '450327', '450328', '450329', '450330', '450331', '450332', '450400', '450401', '450403', '450405', '450406', '450421', '450422', '450423', '450481', '450500', '450501', '450502', '450503', '450512', '450521', '450600', '450601', '450602', '450603', '450621', '450681', '450700', '450701', '450702', '450703', '450721', '450722', '450800', '450801', '450802', '450803', '450804', '450821', '450881', '450900', '450901', '450902', '450903', '450921', '450922', '450923', '450924', '450981', '451000', '451001', '451002', '451021', '451022', '451023', '451024', '451026', '451027', '451028', '451029', '451030', '451031', '451081', '451100', '451101', '451102', '451121', '451122', '451123', '451200', '451201', '451202', '451221', '451222', '451223', '451224', '451225', '451226', '451227', '451228', '451229', '451281', '451300', '451301', '451302', '451321', '451322', '451323', '451324', '451381', '451400', '451401', '451402', '451421', '451422', '451423', '451424', '451425', '451481', '460000', '460100', '460101', '460105', '460106', '460107', '460108', '460200', '460201', '460202', '460203', '460204', '460205', '460300', '460321', '460322', '460323', '469000', '469001', '469002', '469003', '469005', '469006', '469007', '469021', '469022', '469023', '469024', '469025', '469026', '469027', '469028', '469029', '469030', '500000', '500100', '500101', '500102', '500103', '500104', '500105', '500106', '500107', '500108', '500109', '500110', '500111', '500112', '500113', '500114', '500115', '500116', '500117', '500118', '500119', '500120', '500151', '500152', '500153', '500200', '500228', '500229', '500230', '500231', '500232', '500233', '500234', '500235', '500236', '500237', '500238', '500240', '500241', '500242', '500243', '510000', '510100', '510101', '510104', '510105', '510106', '510107', '510108', '510112', '510113', '510114', '510115', '510121', '510122', '510124', '510129', '510131', '510132', '510181', '510182', '510183', '510184', '510300', '510301', '510302', '510303', '510304', '510311', '510321', '510322', '510400', '510401', '510402', '510403', '510411', '510421', '510422', '510500', '510501', '510502', '510503', '510504', '510521', '510522', '510524', '510525', '510600', '510601', '510603', '510623', '510626', '510681', '510682', '510683', '510700', '510701', '510703', '510704', '510722', '510723', '510724', '510725', '510726', '510727', '510781', '510800', '510801', '510802', '510811', '510812', '510821', '510822', '510823', '510824', '510900', '510901', '510903', '510904', '510921', '510922', '510923', '511000', '511001', '511002', '511011', '511024', '511025', '511028', '511100', '511101', '511102', '511111', '511112', '511113', '511123', '511124', '511126', '511129', '511132', '511133', '511181', '511300', '511301', '511302', '511303', '511304', '511321', '511322', '511323', '511324', '511325', '511381', '511400', '511401', '511402', '511403', '511421', '511423', '511424', '511425', '511500', '511501', '511502', '511503', '511521', '511523', '511524', '511525', '511526', '511527', '511528', '511529', '511600', '511601', '511602', '511603', '511621', '511622', '511623', '511681', '511700', '511701', '511702', '511703', '511722', '511723', '511724', '511725', '511781', '511800', '511801', '511802', '511803', '511822', '511823', '511824', '511825', '511826', '511827', '511900', '511901', '511902', '511903', '511921', '511922', '511923', '512000', '512001', '512002', '512021', '512022', '512081', '513200', '513221', '513222', '513223', '513224', '513225', '513226', '513227', '513228', '513229', '513230', '513231', '513232', '513233', '513300', '513301', '513322', '513323', '513324', '513325', '513326', '513327', '513328', '513329', '513330', '513331', '513332', '513333', '513334', '513335', '513336', '513337', '513338', '513400', '513401', '513422', '513423', '513424', '513425', '513426', '513427', '513428', '513429', '513430', '513431', '513432', '513433', '513434', '513435', '513436', '513437', '520000', '520100', '520101', '520102', '520103', '520111', '520112', '520113', '520115', '520121', '520122', '520123', '520181', '520200', '520201', '520203', '520221', '520222', '520300', '520301', '520302', '520303', '520321', '520322', '520323', '520324', '520325', '520326', '520327', '520328', '520329', '520330', '520381', '520382', '520400', '520401', '520402', '520403', '520422', '520423', '520424', '520425', '520500', '520501', '520502', '520521', '520522', '520523', '520524', '520525', '520526', '520527', '520600', '520601', '520602', '520603', '520621', '520622', '520623', '520624', '520625', '520626', '520627', '520628', '522300', '522301', '522322', '522323', '522324', '522325', '522326', '522327', '522328', '522600', '522601', '522622', '522623', '522624', '522625', '522626', '522627', '522628', '522629', '522630', '522631', '522632', '522633', '522634', '522635', '522636', '522700', '522701', '522702', '522722', '522723', '522725', '522726', '522727', '522728', '522729', '522730', '522731', '522732', '530000', '530100', '530101', '530102', '530103', '530111', '530112', '530113', '530114', '530122', '530124', '530125', '530126', '530127', '530128', '530129', '530181', '530300', '530301', '530302', '530321', '530322', '530323', '530324', '530325', '530326', '530328', '530381', '530400', '530401', '530402', '530421', '530422', '530423', '530424', '530425', '530426', '530427', '530428', '530500', '530501', '530502', '530521', '530523', '530524', '530581', '530600', '530601', '530602', '530621', '530622', '530623', '530624', '530625', '530626', '530627', '530628', '530629', '530630', '530700', '530701', '530702', '530721', '530722', '530723', '530724', '530800', '530801', '530802', '530821', '530822', '530823', '530824', '530825', '530826', '530827', '530828', '530829', '530900', '530901', '530902', '530921', '530922', '530923', '530924', '530925', '530926', '530927', '532300', '532301', '532322', '532323', '532324', '532325', '532326', '532327', '532328', '532329', '532331', '532500', '532501', '532502', '532503', '532504', '532523', '532524', '532525', '532527', '532528', '532529', '532530', '532531', '532532', '532600', '532601', '532622', '532623', '532624', '532625', '532626', '532627', '532628', '532800', '532801', '532822', '532823', '532900', '532901', '532922', '532923', '532924', '532925', '532926', '532927', '532928', '532929', '532930', '532931', '532932', '533100', '533102', '533103', '533122', '533123', '533124', '533300', '533321', '533323', '533324', '533325', '533400', '533401', '533422', '533423', '540000', '540100', '540101', '540102', '540121', '540122', '540123', '540124', '540125', '540126', '540127', '540200', '540202', '540221', '540222', '540223', '540224', '540225', '540226', '540227', '540228', '540229', '540230', '540231', '540232', '540233', '540234', '540235', '540236', '540237', '540300', '540302', '540321', '540322', '540323', '540324', '540325', '540326', '540327', '540328', '540329', '540330', '540400', '540402', '540421', '540422', '540423', '540424', '540425', '540426', '542200', '542221', '542222', '542223', '542224', '542225', '542226', '542227', '542228', '542229', '542231', '542232', '542233', '542400', '542421', '542422', '542423', '542424', '542425', '542426', '542427', '542428', '542429', '542430', '542431', '542500', '542521', '542522', '542523', '542524', '542525', '542526', '542527', '610000', '610100', '610101', '610102', '610103', '610104', '610111', '610112', '610113', '610114', '610115', '610116', '610117', '610122', '610124', '610125', '610200', '610201', '610202', '610203', '610204', '610222', '610300', '610301', '610302', '610303', '610304', '610322', '610323', '610324', '610326', '610327', '610328', '610329', '610330', '610331', '610400', '610401', '610402', '610403', '610404', '610422', '610423', '610424', '610425', '610426', '610427', '610428', '610429', '610430', '610431', '610481', '610500', '610501', '610502', '610521', '610522', '610523', '610524', '610525', '610526', '610527', '610528', '610581', '610582', '610600', '610601', '610602', '610621', '610622', '610623', '610624', '610625', '610626', '610627', '610628', '610629', '610630', '610631', '610632', '610700', '610701', '610702', '610721', '610722', '610723', '610724', '610725', '610726', '610727', '610728', '610729', '610730', '610800', '610801', '610802', '610821', '610822', '610823', '610824', '610825', '610826', '610827', '610828', '610829', '610830', '610831', '610900', '610901', '610902', '610921', '610922', '610923', '610924', '610925', '610926', '610927', '610928', '610929', '611000', '611001', '611002', '611021', '611022', '611023', '611024', '611025', '611026', '620000', '620100', '620101', '620102', '620103', '620104', '620105', '620111', '620121', '620122', '620123', '620200', '620201', '620300', '620301', '620302', '620321', '620400', '620401', '620402', '620403', '620421', '620422', '620423', '620500', '620501', '620502', '620503', '620521', '620522', '620523', '620524', '620525', '620600', '620601', '620602', '620621', '620622', '620623', '620700', '620701', '620702', '620721', '620722', '620723', '620724', '620725', '620800', '620801', '620802', '620821', '620822', '620823', '620824', '620825', '620826', '620900', '620901', '620902', '620921', '620922', '620923', '620924', '620981', '620982', '621000', '621001', '621002', '621021', '621022', '621023', '621024', '621025', '621026', '621027', '621100', '621101', '621102', '621121', '621122', '621123', '621124', '621125', '621126', '621200', '621201', '621202', '621221', '621222', '621223', '621224', '621225', '621226', '621227', '621228', '622900', '622901', '622921', '622922', '622923', '622924', '622925', '622926', '622927', '623000', '623001', '623021', '623022', '623023', '623024', '623025', '623026', '623027', '630000', '630100', '630101', '630102', '630103', '630104', '630105', '630121', '630122', '630123', '630200', '630202', '630203', '630222', '630223', '630224', '630225', '632200', '632221', '632222', '632223', '632224', '632300', '632321', '632322', '632323', '632324', '632500', '632521', '632522', '632523', '632524', '632525', '632600', '632621', '632622', '632623', '632624', '632625', '632626', '632700', '632701', '632722', '632723', '632724', '632725', '632726', '632800', '632801', '632802', '632821', '632822', '632823', '640000', '640100', '640101', '640104', '640105', '640106', '640121', '640122', '640181', '640200', '640201', '640202', '640205', '640221', '640300', '640301', '640302', '640303', '640323', '640324', '640381', '640400', '640401', '640402', '640422', '640423', '640424', '640425', '640500', '640501', '640502', '640521', '640522', '650000', '650100', '650101', '650102', '650103', '650104', '650105', '650106', '650107', '650109', '650121', '650200', '650201', '650202', '650203', '650204', '650205', '650400', '650402', '650421', '650422', '652200', '652201', '652222', '652223', '652300', '652301', '652302', '652323', '652324', '652325', '652327', '652328', '652700', '652701', '652702', '652722', '652723', '652800', '652801', '652822', '652823', '652824', '652825', '652826', '652827', '652828', '652829', '652900', '652901', '652922', '652923', '652924', '652925', '652926', '652927', '652928', '652929', '653000', '653001', '653022', '653023', '653024', '653100', '653101', '653121', '653122', '653123', '653124', '653125', '653126', '653127', '653128', '653129', '653130', '653131', '653200', '653201', '653221', '653222', '653223', '653224', '653225', '653226', '653227', '654000', '654002', '654003', '654004', '654021', '654022', '654023', '654024', '654025', '654026', '654027', '654028', '654200', '654201', '654202', '654221', '654223', '654224', '654225', '654226', '654300', '654301', '654321', '654322', '654323', '654324', '654325', '654326', '659000', '659001', '659002', '659003', '659004', '710000', '810000', '820000']
lastnames = [
"梦琪","忆柳","之桃","慕青","问兰","尔岚","元香","初夏","沛菡","傲珊","曼文","乐菱","痴珊","恨玉","惜文","香寒","新柔","语蓉","海安","夜蓉","涵柏","水桃","醉蓝","春儿","语琴","从彤","傲晴","语兰","又菱","碧彤","元霜","怜梦","紫寒","妙彤","曼易","南莲","紫翠","雨寒","易烟","如萱","若南","寻真","晓亦","向珊","慕灵","以蕊","寻雁","映易","雪柳","孤岚","笑霜","海云","凝天","沛珊","寒云","冰旋","宛儿","绿真","盼儿","晓霜","碧凡","夏菡","曼香","若烟","半梦","雅绿","冰蓝","灵槐","平安","书翠","翠风","香巧","代云","梦曼","幼翠","友巧","听寒","梦柏","醉易","访旋","亦玉","凌萱","访卉","怀亦","笑蓝","春翠","靖柏","夜蕾","冰夏","梦松","书雪","乐枫","念薇","靖雁","寻春","恨山","从寒","忆香","觅波","静曼","凡旋","以亦","念露","芷蕾","千兰","新波","代真","新蕾","雁玉","冷卉","紫山","千琴","恨天","傲芙","盼山","怀蝶","冰兰","山柏","翠萱","恨松","问旋","从南","白易","问筠","如霜","半芹","丹珍","冰彤","亦寒","寒雁","怜云","寻文","乐丹","翠柔","谷山","之瑶","冰露","尔珍","谷雪","乐萱","涵菡","海莲","傲蕾","青槐","冬儿","易梦","惜雪","宛海","之柔","夏青","亦瑶","妙菡","春竹","痴梦","紫蓝","晓巧","幻柏","元风","冰枫","访蕊","南春","芷蕊","凡蕾","凡柔","安蕾","天荷","含玉","书兰","雅琴","书瑶","春雁","从安","夏槐","念芹","怀萍","代曼","幻珊","谷丝","秋翠","白晴","海露","代荷","含玉","书蕾","听白","访琴","灵雁","秋春","雪青","乐瑶","含烟","涵双","平蝶","雅蕊","傲之","灵薇","绿春","含蕾","从梦","从蓉","初丹","听兰","听蓉","语芙","夏彤","凌瑶","忆翠","幻灵","怜菡","紫南","依珊","妙竹","访烟","怜蕾","映寒","友绿","冰萍","惜霜","凌香","芷蕾","雁卉","迎梦","元柏","代萱","紫真","千青","凌寒","紫安","寒安","怀蕊","秋荷","涵雁","以山","凡梅","盼曼","翠彤","谷冬","新巧","冷安","千萍","冰烟","雅阳","友绿","南松","诗云","飞风","寄灵","书芹","幼蓉","以蓝","笑寒","忆寒","秋烟","芷巧","水香","映之","醉波","幻莲","夜山","芷卉","向彤","小玉","幼南","凡梦","尔曼","念波","迎松","青寒","笑天","涵蕾","碧菡","映秋","盼烟","忆山","以寒","寒香","小凡","代亦","梦露","映波","友蕊","寄凡","怜蕾","雁枫","水绿","曼荷","笑珊","寒珊","谷南","慕儿","夏岚","友儿","小萱","紫青","妙菱","冬寒","曼柔","语蝶","青筠","夜安","觅海","问安","晓槐","雅山","访云","翠容","寒凡","晓绿","以菱","冬云","含玉","访枫","含卉","夜白","冷安","灵竹","醉薇","元珊","幻波","盼夏","元瑶","迎曼","水云","访琴","谷波","乐之","笑白","之山","妙海","紫霜","平夏","凌旋","孤丝","怜寒","向萍","凡松","青丝","翠安","如天","凌雪","绮菱","代云","南莲","寻南","春文","香薇","冬灵","凌珍","采绿","天春","沛文","紫槐","幻柏","采文","春梅","雪旋","盼海","映梦","安雁","映容","凝阳","访风","天亦","平绿","盼香","觅风","小霜","雪萍","半雪","山柳","谷雪","靖易","白薇","梦菡","飞绿","如波","又晴","友易","香菱","冬亦","问雁","妙春","海冬","半安","平春","幼柏","秋灵","凝芙","念烟","白山","从灵","尔芙","迎蓉","念寒","翠绿","翠芙","靖儿","妙柏","千凝","小珍","天巧","妙旋","雪枫","夏菡","元绿","痴灵","绮琴","雨双","听枫","觅荷","凡之","晓凡","雅彤","香薇","孤风","从安","绮彤","之玉","雨珍","幻丝","代梅","香波","青亦","元菱","海瑶","飞槐","听露","梦岚","幻竹","新冬","盼翠","谷云","忆霜","水瑶","慕晴","秋双","雨真","觅珍","丹雪","从阳","元枫","痴香","思天","如松","妙晴","谷秋","妙松","晓夏","香柏","巧绿","宛筠","碧琴","盼兰","小夏","安容","青曼","千儿","香春","寻双","涵瑶","冷梅","秋柔","思菱","醉波","醉柳","以寒","迎夏","向雪","香莲","以丹","依凝","如柏","雁菱","凝竹","宛白","初柔","南蕾","书萱","梦槐","香芹","南琴","绿海","沛儿","晓瑶","听春","凝蝶","紫雪","念双","念真","曼寒","凡霜","飞雪","雪兰","雅霜","从蓉","冷雪","靖巧","翠丝","觅翠","凡白","乐蓉","迎波","丹烟","梦旋","书双","念桃","夜天","海桃","青香","恨风","安筠","觅柔","初南","秋蝶","千易","安露","诗蕊","山雁","友菱","香露","晓兰","白卉","语山","冷珍","秋翠","夏柳","如之","忆南","书易","翠桃","寄瑶","如曼","问柳","香梅","幻桃","又菡","春绿","醉蝶","亦绿","诗珊","听芹","新之","易巧","念云","晓灵","静枫","夏蓉","如南","幼丝","秋白","冰安","秋白","南风","醉山","初彤","凝海","紫文","凌晴","香卉","雅琴","傲安","傲之","初蝶","寻桃","代芹","诗霜","春柏","绿夏","碧灵","诗柳","夏柳","采白","慕梅","乐安","冬菱","紫安","宛凝","雨雪","易真","安荷","静竹","代柔","丹秋","绮梅","依白","凝荷","幼珊","忆彤","凌青","之桃","芷荷","听荷","代玉","念珍","梦菲","夜春","千秋","白秋","谷菱","飞松","初瑶","惜灵","恨瑶","梦易","新瑶","曼梅","碧曼","友瑶","雨兰","夜柳","香蝶","盼巧","芷珍","香卉","含芙","夜云","依萱","凝雁","以莲","易容","元柳","安南","幼晴","尔琴","飞阳","白凡","沛萍","雪瑶","向卉","采文","乐珍","寒荷","觅双","白桃","安卉","迎曼","盼雁","乐松","涵山","恨寒","问枫","以柳","含海","秋春","翠曼","忆梅","涵柳","梦香","海蓝","晓曼","代珊","春冬","恨荷","忆丹","静芙","绮兰","梦安","紫丝","千雁","凝珍","香萱","梦容","冷雁","飞柏","天真","翠琴","寄真","秋荷","代珊","初雪","雅柏","怜容","如风","南露","紫易","冰凡","海雪","语蓉","碧玉","翠岚","语风","盼丹","痴旋","凝梦","从雪","白枫","傲云","白梅","念露","慕凝","雅柔","盼柳","半青","从霜","怀柔","怜晴","夜蓉","代双","以南","若菱","芷文","寄春","南晴","恨之","梦寒","初翠","灵波","巧春","问夏","凌春","惜海"]

firstnames = [
 "赵","钱","孙","李","周","吴","郑","王","冯","陈","褚","卫","蒋","沈","韩","杨","朱","秦","尤","许","何","吕","施","张","孔","曹","严","华","金","魏","陶","姜","戚","谢","邹","喻","柏","水","窦","章","云","苏","潘","葛","奚","范","彭","郎","鲁","韦","昌","马","苗","凤","花","方","俞","任","袁","柳","酆","鲍","史","唐","费","廉","岑","薛","雷","贺","倪","汤","滕","殷","罗","毕","郝","邬","安","常","乐","于","时","傅","皮","卞","齐","康","伍","余","元","卜","顾","孟","平","黄","和","穆","萧","尹","姚","邵","湛","汪","祁","毛","禹","狄","米","贝","明","臧","计","伏","成","戴","谈","宋","茅","庞","熊","纪","舒","屈","项","祝","董","梁","杜","阮","蓝","闵","席","季","麻","强","贾","路","娄","危","江","童","颜","郭","梅","盛","林","刁","锺","徐","邱","骆","高","夏","蔡","田","樊","胡","凌","霍","虞","万","支","柯","昝","管","卢","莫","经","房","裘","缪","干","解","应","宗","丁","宣","贲","邓","郁","单","杭","洪","包","诸","左","石","崔","吉","钮","龚","程","嵇","邢","滑","裴","陆","荣","翁","荀","羊","於","惠","甄","麴","家","封","芮","羿","储","靳","汲","邴","糜","松","井","段","富","巫","乌","焦","巴","弓","牧","隗","山","谷","车","侯","宓","蓬","全","郗","班","仰","秋","仲","伊","宫","宁","仇","栾","暴","甘","钭","历","戎","祖","武","符","刘","景","詹","束","龙","叶","幸","司","韶","郜","黎","蓟","溥","印","宿","白","怀","蒲","邰","从","鄂","索","咸","籍","赖","卓","蔺","屠","蒙","池","乔","阳","郁","胥","能","苍","双","闻","莘","党","翟","谭","贡","劳","逄","姬","申","扶","堵","冉","宰","郦","雍","却","璩","桑","桂","濮","牛","寿","通","边","扈","燕","冀","僪","浦","尚","农","温","别","庄","晏","柴","瞿","阎","充","慕","连","茹","习","宦","艾","鱼","容","向","古","易","慎","戈","廖","庾","终","暨","居","衡","步","都","耿","满","弘","匡","国","文","寇","广","禄","阙","东","欧","殳","沃","利","蔚","越","夔","隆","师","巩","厍","聂","晁","勾","敖","融","冷","訾","辛","阚","那","简","饶","空","曾","毋","沙","乜","养","鞠","须","丰","巢","关","蒯","相","查","后","荆","红","游","竺","权","逮","盍","益","桓","公"]

citys = [
    "直辖区县",
    "直辖区县",
    "石家庄市",
    "衡水市",
    "邢台市",
    "邯郸市",
    "沧州市",
    "唐山市",
    "廊坊市",
    "秦皇岛市",
    "承德市",
    "保定市",
    "张家口市",
    "太原市",
    "晋中市",
    "吕梁市",
    "忻州市",
    "朔州市",
    "大同市",
    "临汾市",
    "运城市",
    "阳泉市",
    "长治市",
    "晋城市",
    "呼和浩特市",
    "乌兰察布市",
    "包头市",
    "巴彦淖尔市",
    "乌海市",
    "鄂尔多斯市",
    "呼伦贝尔市",
    "赤峰市",
    "锡林郭勒盟",
    "通辽市",
    "兴安盟",
    "阿拉善盟",
    "沈阳市",
    "辽阳市",
    "铁岭市",
    "抚顺市",
    "鞍山市",
    "营口市",
    "大连市",
    "本溪市",
    "丹东市",
    "锦州市",
    "朝阳市",
    "阜新市",
    "盘锦市",
    "葫芦岛市",
    "长春市",
    "吉林市",
    "延边朝鲜族自治州",
    "通化市",
    "白山市",
    "四平市",
    "辽源市",
    "白城市",
    "松原市",
    "哈尔滨市",
    "绥化市",
    "伊春市",
    "佳木斯市",
    "鹤岗市",
    "七台河市",
    "双鸭山市",
    "牡丹江市",
    "鸡西市",
    "齐齐哈尔市",
    "大庆市",
    "黑河市",
    "大兴安岭地区",
    "直辖区县",
    "南京市",
    "镇江市",
    "常州市",
    "无锡市",
    "苏州市",
    "徐州市",
    "连云港市",
    "淮安市",
    "宿迁市",
    "盐城市",
    "扬州市",
    "泰州市",
    "南通市",
    "杭州市",
    "绍兴市",
    "湖州市",
    "嘉兴市",
    "宁波市",
    "舟山市",
    "台州市",
    "金华市",
    "丽水市",
    "衢州市",
    "温州市",
    "合肥市",
    "淮南市",
    "蚌埠市",
    "宿州市",
    "淮北市",
    "阜阳市",
    "亳州市",
    "六安市",
    "巢湖市",
    "滁州市",
    "芜湖市",
    "宣城市",
    "马鞍山市",
    "铜陵市",
    "黄山市",
    "安庆市",
    "池州市",
    "福州市",
    "莆田市",
    "宁德市",
    "南平市",
    "厦门市",
    "泉州市",
    "漳州市",
    "龙岩市",
    "三明市",
    "南昌市",
    "九江市",
    "景德镇市",
    "上饶市",
    "鹰潭市",
    "宜春市",
    "萍乡市",
    "新余市",
    "赣州市",
    "吉安市",
    "抚州市",
    "济南市",
    "聊城市",
    "德州市",
    "淄博市",
    "滨州市",
    "东营市",
    "潍坊市",
    "烟台市",
    "威海市",
    "青岛市",
    "泰安市",
    "莱芜市",
    "济宁市",
    "菏泽市",
    "临沂市",
    "日照市",
    "枣庄市",
    "郑州市",
    "新乡市",
    "焦作市",
    "济源市",
    "安阳市",
    "濮阳市",
    "鹤壁市",
    "许昌市",
    "漯河市",
    "驻马店市",
    "信阳市",
    "周口市",
    "平顶山市",
    "洛阳市",
    "三门峡市",
    "南阳市",
    "开封市",
    "商丘市",
    "武汉市",
    "天门市",
    "孝感市",
    "仙桃市",
    "潜江市",
    "荆州市",
    "黄石市",
    "鄂州市",
    "咸宁市",
    "黄冈市",
    "襄樊市",
    "随州市",
    "十堰市",
    "神农架林区",
    "宜昌市",
    "恩施土家族苗族自治州",
    "荆门市",
    "长沙市",
    "湘潭市",
    "株洲市",
    "益阳市",
    "岳阳市",
    "常德市",
    "湘西土家族苗族自治州",
    "娄底市",
    "怀化市",
    "衡阳市",
    "邵阳市",
    "郴州市",
    "永州市",
    "张家界市",
    "广州市",
    "清远市",
    "韶关市",
    "梅州市",
    "汕头市",
    "惠州市",
    "汕尾市",
    "河源市",
    "深圳市",
    "珠海市",
    "潮州市",
    "揭阳市",
    "东莞市",
    "湛江市",
    "茂名市",
    "肇庆市",
    "云浮市",
    "佛山市",
    "中山市",
    "江门市",
    "阳江市",
    "南宁市",
    "崇左市",
    "百色市",
    "钦州市",
    "北海市",
    "玉林市",
    "贵港市",
    "防城港市",
    "桂林市",
    "贺州市",
    "梧州市",
    "柳州市",
    "来宾市",
    "河池市",
    "海口市",
    "三亚市",
    "直辖区县",
    "成都市",
    "乐山市",
    "凉山彝族自治州",
    "攀枝花市",
    "德阳市",
    "眉山市",
    "绵阳市",
    "阿坝藏族羌族自治州",
    "雅安市",
    "甘孜藏族自治州",
    "广元市",
    "遂宁市",
    "达州市",
    "巴中市",
    "南充市",
    "广安市",
    "内江市",
    "资阳市",
    "自贡市",
    "宜宾市",
    "泸州市",
    "贵阳市",
    "毕节地区",
    "六盘水市",
    "铜仁地区",
    "黔东南苗族侗族自治州",
    "黔南布依族苗族自治州",
    "安顺市",
    "黔西南布依族苗族自治",
    "遵义市",
    "昆明市",
    "玉溪市",
    "曲靖市",
    "昭通市",
    "红河哈尼族彝族自治州",
    "文山壮族苗族自治州",
    "普洱市",
    "西双版纳傣族自治州",
    "大理白族自治州",
    "怒江傈僳族自治州",
    "丽江市",
    "迪庆藏族自治州",
    "楚雄彝族自治州",
    "临沧市",
    "保山市",
    "德宏傣族景颇族自治州",
    "拉萨市",
    "那曲地区",
    "昌都地区",
    "山南地区",
    "日喀则地区",
    "阿里地区",
    "林芝地区",
    "西安市",
    "咸阳市",
    "渭南市",
    "延安市",
    "榆林市",
    "宝鸡市",
    "汉中市",
    "安康市",
    "商洛市",
    "铜川市",
    "兰州市",
    "白银市",
    "临夏回族自治州",
    "武威市",
    "张掖市",
    "酒泉市",
    "嘉峪关市",
    "金昌市",
    "天水市",
    "陇南市",
    "定西市",
    "平凉市",
    "庆阳市",
    "甘南藏族自治州",
    "西宁市",
    "海东地区",
    "黄南藏族自治州",
    "海北藏族自治州",
    "海南藏族自治州",
    "果洛藏族自治州",
    "玉树藏族自治州",
    "海西蒙古族藏族自治州",
    "银川市",
    "吴忠市",
    "石嘴山市",
    "中卫市",
    "固原市",
    "乌鲁木齐市",
    "昌吉回族自治州",
    "五家渠市",
    "石河子市",
    "博尔塔拉蒙古自治州",
    "克拉玛依市",
    "塔城地区",
    "伊犁哈萨克自治州",
    "阿勒泰地区",
    "吐鲁番地区",
    "哈密地区",
    "巴音郭楞蒙古自治州",
    "阿克苏地区",
    "阿拉尔市",
    "图木舒克市",
    "喀什地区",
    "克孜勒苏柯尔克孜自治",
    "和田地区"
]
colleges = [
    "北京大学",
    "中国人民大学",
    "清华大学",
    "北京交通大学",
    "北京工业大学",
    "北京航空航天大学",
    "北京理工大学",
    "北京科技大学",
    "北方工业大学",
    "北京化工大学",
    "北京工商大学",
    "北京服装学院",
    "北京邮电大学",
    "北京印刷学院",
    "北京建筑大学",
    "北京石油化工学院",
    "北京电子科技学院",
    "中国农业大学",
    "北京农学院",
    "北京林业大学",
    "北京协和医学院",
    "首都医科大学",
    "北京中医药大学",
    "北京师范大学",
    "首都师范大学",
    "首都体育学院",
    "北京外国语大学",
    "北京第二外国语学院",
    "北京语言大学",
    "中国传媒大学",
    "中央财经大学",
    "对外经济贸易大学",
    "北京物资学院",
    "首都经济贸易大学",
    "外交学院",
    "中国人民公安大学",
    "国际关系学院",
    "北京体育大学",
    "中央音乐学院",
    "中国音乐学院",
    "中央美术学院",
    "中央戏剧学院",
    "中国戏曲学院",
    "北京电影学院",
    "北京舞蹈学院",
    "中央民族大学",
    "中国政法大学",
    "华北电力大学",
    "中华女子学院",
    "北京信息科技大学",
    "中国矿业大学（北京）",
    "中国石油大学（北京）",
    "中国地质大学（北京）",
    "北京联合大学",
    "北京城市学院",
    "中国青年政治学院",
    "首钢工学院",
    "中国劳动关系学院",
    "北京吉利学院",
    "首都师范大学科德学院",
    "北京工商大学嘉华学院",
    "北京邮电大学世纪学院",
    "北京工业大学耿丹学院",
    "北京警察学院",
    "北京第二外国语学院中瑞酒店管理学院",
    "中国科学院大学",
    "北京工业职业技术学院",
    "北京信息职业技术学院",
    "北京电子科技职业学院",
    "北京京北职业技术学院",
    "北京交通职业技术学院",
    "北京青年政治学院",
    "北京农业职业学院",
    "北京政法职业学院",
    "北京财贸职业学院",
    "北京北大方正软件职业技术学院",
    "北京经贸职业学院",
    "北京经济技术职业学院",
    "北京戏曲艺术职业学院",
    "北京汇佳职业学院",
    "北京科技经营管理学院",
    "北京科技职业学院",
    "北京培黎职业学院",
    "北京经济管理职业学院",
    "北京劳动保障职业学院",
    "北京社会管理职业学院",
    "北京艺术传媒职业学院",
    "北京体育职业学院",
    "北京交通运输职业学院",
    "北京卫生职业学院",
    "北京网络职业学院",
    "南开大学",
    "天津大学",
    "天津科技大学",
    "天津工业大学",
    "中国民航大学",
    "天津理工大学",
    "天津农学院",
    "天津医科大学",
    "天津中医药大学",
    "天津师范大学",
    "天津职业技术师范大学",
    "天津外国语大学",
    "天津商业大学",
    "天津财经大学",
    "天津体育学院",
    "天津音乐学院",
    "天津美术学院",
    "天津城建大学",
    "天津天狮学院",
    "天津中德应用技术大学",
    "天津外国语大学滨海外事学院",
    "天津体育学院运动与文化艺术学院",
    "天津商业大学宝德学院",
    "天津医科大学临床医学院",
    "南开大学滨海学院",
    "天津师范大学津沽学院",
    "天津理工大学中环信息学院",
    "北京科技大学天津学院",
    "天津大学仁爱学院",
    "天津财经大学珠江学院",
    "天津市职业大学",
    "天津滨海职业学院",
    "天津工程职业技术学院",
    "天津青年职业学院",
    "天津渤海职业技术学院",
    "天津电子信息职业技术学院",
    "天津机电职业技术学院",
    "天津现代职业技术学院",
    "天津公安警官职业学院",
    "天津轻工职业技术学院",
    "天津商务职业学院",
    "天津国土资源和房屋职业学院",
    "天津医学高等专科学校",
    "天津开发区职业技术学院",
    "天津艺术职业学院",
    "天津交通职业学院",
    "天津冶金职业技术学院",
    "天津石油职业技术学院",
    "天津城市职业学院",
    "天津铁道职业技术学院",
    "天津工艺美术职业学院",
    "天津城市建设管理职业技术学院",
    "天津生物工程职业技术学院",
    "天津海运职业学院",
    "天津广播影视职业学院",
    "河北大学",
    "河北工程大学",
    "河北地质大学",
    "河北工业大学",
    "华北理工大学",
    "河北科技大学",
    "河北建筑工程学院",
    "河北水利电力学院",
    "河北农业大学",
    "河北医科大学",
    "河北北方学院",
    "承德医学院",
    "河北师范大学",
    "保定学院",
    "河北民族师范学院",
    "唐山师范学院",
    "廊坊师范学院",
    "衡水学院",
    "石家庄学院",
    "邯郸学院",
    "邢台学院",
    "沧州师范学院",
    "石家庄铁道大学",
    "燕山大学",
    "河北科技师范学院",
    "唐山学院",
    "华北科技学院",
    "中国人民武装警察部队学院",
    "河北体育学院",
    "河北金融学院",
    "北华航天工业学院",
    "防灾科技学院",
    "河北经贸大学",
    "中央司法警官学院",
    "河北传媒学院",
    "河北工程技术学院",
    "河北美术学院",
    "河北科技学院",
    "河北外国语学院",
    "河北大学工商学院",
    "华北理工大学轻工学院",
    "河北科技大学理工学院",
    "河北师范大学汇华学院",
    "河北经贸大学经济管理学院",
    "河北医科大学临床学院",
    "华北电力大学科技学院",
    "河北工程大学科信学院",
    "河北工业大学城市学院",
    "燕山大学里仁学院",
    "石家庄铁道大学四方学院",
    "河北地质大学华信学院",
    "河北农业大学现代科技学院",
    "华北理工大学冀唐学院",
    "中国地质大学长城学院",
    "燕京理工学院",
    "北京中医药大学东方学院",
    "北京交通大学海滨学院",
    "河北东方学院",
    "河北中医学院",
    "张家口学院",
    "河北环境工程学院",
    "河北工业职业技术学院",
    "邯郸职业技术学院",
    "石家庄职业技术学院",
    "张家口职业技术学院",
    "承德石油高等专科学校",
    "邢台职业技术学院",
    "河北软件职业技术学院",
    "河北石油职业技术学院",
    "河北建材职业技术学院",
    "河北政法职业学院",
    "沧州职业技术学院",
    "河北能源职业技术学院",
    "石家庄铁路职业技术学院",
    "保定职业技术学院",
    "秦皇岛职业技术学院",
    "石家庄工程职业学院",
    "石家庄城市经济职业学院",
    "唐山职业技术学院",
    "衡水职业技术学院",
    "唐山工业职业技术学院",
    "邢台医学高等专科学校",
    "河北省艺术职业学院",
    "河北旅游职业学院",
    "石家庄财经职业学院",
    "河北交通职业技术学院",
    "河北化工医药职业技术学院",
    "石家庄信息工程职业学院",
    "河北对外经贸职业学院",
    "保定电力职业技术学院",
    "河北机电职业技术学院",
    "渤海石油职业学院",
    "廊坊职业技术学院",
    "唐山科技职业技术学院",
    "石家庄邮电职业技术学院",
    "河北公安警察职业学院",
    "石家庄工商职业学院",
    "石家庄理工职业学院",
    "石家庄科技信息职业学院",
    "河北司法警官职业学院",
    "沧州医学高等专科学校",
    "河北女子职业技术学院",
    "石家庄医学高等专科学校",
    "石家庄经济职业学院",
    "冀中职业学院",
    "石家庄人民医学高等专科学校",
    "石家庄科技工程职业学院",
    "河北劳动关系职业学院",
    "石家庄科技职业学院",
    "泊头职业学院",
    "宣化科技职业学院",
    "廊坊燕京职业技术学院",
    "承德护理职业学院",
    "石家庄幼儿师范高等专科学校",
    "廊坊卫生职业学院",
    "河北轨道运输职业技术学院",
    "保定幼儿师范高等专科学校",
    "河北工艺美术职业学院",
    "渤海理工职业学院",
    "唐山幼儿师范高等专科学校",
    "山西大学",
    "太原科技大学",
    "中北大学",
    "太原理工大学",
    "山西农业大学",
    "山西医科大学",
    "长治医学院",
    "山西师范大学",
    "太原师范学院",
    "山西大同大学",
    "晋中学院",
    "长治学院",
    "运城学院",
    "忻州师范学院",
    "山西财经大学",
    "山西中医学院",
    "吕梁学院",
    "太原学院",
    "山西警察学院",
    "山西应用科技学院",
    "山西大学商务学院",
    "太原理工大学现代科技学院",
    "山西农业大学信息学院",
    "山西师范大学现代文理学院",
    "中北大学信息商务学院",
    "太原科技大学华科学院",
    "山西医科大学晋祠学院",
    "山西财经大学华商学院",
    "山西工商学院",
    "太原工业学院",
    "山西传媒学院",
    "山西工程技术学院",
    "山西能源学院",
    "山西省财政税务专科学校",
    "长治职业技术学院",
    "山西艺术职业学院",
    "晋城职业技术学院",
    "山西建筑职业技术学院",
    "山西药科职业学院",
    "山西工程职业技术学院",
    "山西交通职业技术学院",
    "大同煤炭职业技术学院",
    "山西机电职业技术学院",
    "山西戏剧职业学院",
    "山西财贸职业技术学院",
    "山西林业职业技术学院",
    "山西水利职业技术学院",
    "阳泉职业技术学院",
    "临汾职业技术学院",
    "山西职业技术学院",
    "山西煤炭职业技术学院",
    "山西金融职业学院",
    "太原城市职业技术学院",
    "山西信息职业技术学院",
    "山西体育职业学院",
    "山西警官职业学院",
    "山西国际商务职业学院",
    "潞安职业技术学院",
    "太原旅游职业学院",
    "山西旅游职业学院",
    "山西管理职业学院",
    "山西电力职业技术学院",
    "忻州职业技术学院",
    "山西同文职业技术学院",
    "晋中职业技术学院",
    "山西华澳商贸职业学院",
    "山西运城农业职业技术学院",
    "运城幼儿师范高等专科学校",
    "山西老区职业技术学院",
    "山西经贸职业学院",
    "朔州职业技术学院",
    "运城职业技术学院",
    "山西轻工职业技术学院",
    "晋中师范高等专科学校",
    "阳泉师范高等专科学校",
    "山西青年职业学院",
    "运城护理职业学院",
    "运城师范高等专科学校",
    "朔州师范高等专科学校",
    "吕梁职业技术学院",
    "内蒙古大学",
    "内蒙古科技大学",
    "内蒙古工业大学",
    "内蒙古农业大学",
    "内蒙古医科大学",
    "内蒙古师范大学",
    "内蒙古民族大学",
    "赤峰学院",
    "内蒙古财经大学",
    "呼伦贝尔学院",
    "集宁师范学院",
    "河套学院",
    "呼和浩特民族学院",
    "内蒙古大学创业学院",
    "内蒙古师范大学鸿德学院",
    "内蒙古艺术学院",
    "鄂尔多斯应用技术学院",
    "内蒙古建筑职业技术学院",
    "内蒙古丰州职业学院",
    "包头职业技术学院",
    "兴安职业技术学院",
    "呼和浩特职业学院",
    "包头轻工职业技术学院",
    "内蒙古电子信息职业技术学院",
    "内蒙古机电职业技术学院",
    "内蒙古化工职业学院",
    "内蒙古商贸职业学院",
    "锡林郭勒职业学院",
    "内蒙古警察职业学院",
    "内蒙古体育职业学院",
    "乌兰察布职业学院",
    "通辽职业学院",
    "科尔沁艺术职业学院",
    "内蒙古交通职业技术学院",
    "包头钢铁职业技术学院",
    "乌海职业技术学院",
    "内蒙古科技职业学院",
    "内蒙古北方职业技术学院",
    "赤峰职业技术学院",
    "内蒙古经贸外语职业学院",
    "包头铁道职业技术学院",
    "乌兰察布医学高等专科学校",
    "鄂尔多斯职业学院",
    "内蒙古工业职业学院",
    "呼伦贝尔职业技术学院",
    "满洲里俄语职业学院",
    "内蒙古能源职业学院",
    "赤峰工业职业技术学院",
    "阿拉善职业技术学院",
    "内蒙古美术职业学院",
    "内蒙古民族幼儿师范高等专科学校",
    "鄂尔多斯生态环境职业学院",
    "扎兰屯职业学院",
    "辽宁大学",
    "大连理工大学",
    "沈阳工业大学",
    "沈阳航空航天大学",
    "沈阳理工大学",
    "东北大学",
    "辽宁科技大学",
    "辽宁工程技术大学",
    "辽宁石油化工大学",
    "沈阳化工大学",
    "大连交通大学",
    "大连海事大学",
    "大连工业大学",
    "沈阳建筑大学",
    "辽宁工业大学",
    "沈阳农业大学",
    "大连海洋大学",
    "中国医科大学",
    "锦州医科大学",
    "大连医科大学",
    "辽宁中医药大学",
    "沈阳药科大学",
    "沈阳医学院",
    "辽宁师范大学",
    "沈阳师范大学",
    "渤海大学",
    "鞍山师范学院",
    "大连外国语大学",
    "东北财经大学",
    "中国刑事警察学院",
    "沈阳体育学院",
    "沈阳音乐学院",
    "鲁迅美术学院",
    "辽宁对外经贸学院",
    "沈阳大学",
    "大连大学",
    "辽宁科技学院",
    "辽宁警察学院",
    "沈阳工程学院",
    "辽东学院",
    "大连民族大学",
    "大连理工大学城市学院",
    "沈阳工业大学工程学院",
    "沈阳航空航天大学北方科技学院",
    "沈阳工学院",
    "大连工业大学艺术与信息工程学院",
    "大连科技学院",
    "沈阳城市建设学院",
    "中国医科大学临床医药学院",
    "大连医科大学中山学院",
    "锦州医科大学医疗学院",
    "辽宁师范大学海华学院",
    "辽宁理工学院",
    "大连财经学院",
    "沈阳城市学院",
    "辽宁科技大学信息技术学院",
    "辽宁石油化工大学顺华能源学院",
    "大连艺术学院",
    "辽宁中医药大学杏林学院",
    "辽宁何氏医学院",
    "沈阳科技学院",
    "大连东软信息学院",
    "辽宁财贸学院",
    "辽宁传媒学院",
    "营口理工学院",
    "朝阳师范高等专科学校",
    "抚顺师范高等专科学校",
    "锦州师范高等专科学校",
    "营口职业技术学院",
    "铁岭师范高等专科学校",
    "大连职业技术学院",
    "辽宁农业职业技术学院",
    "抚顺职业技术学院",
    "辽阳职业技术学院",
    "阜新高等专科学校",
    "辽宁省交通高等专科学校",
    "辽宁税务高等专科学校",
    "盘锦职业技术学院",
    "沈阳航空职业技术学院",
    "辽宁体育运动职业技术学院",
    "辽宁职业学院",
    "辽宁林业职业技术学院",
    "沈阳职业技术学院",
    "辽宁理工职业学院",
    "大连商务职业学院",
    "辽宁金融职业学院",
    "辽宁轨道交通职业学院",
    "辽宁广告职业学院",
    "辽宁机电职业技术学院",
    "辽宁经济职业技术学院",
    "辽宁石化职业技术学院",
    "渤海船舶职业学院",
    "大连软件职业学院",
    "大连翻译职业学院",
    "辽宁商贸职业学院",
    "大连枫叶职业技术学院",
    "辽宁装备制造职业技术学院",
    "辽河石油职业技术学院",
    "辽宁地质工程职业学院",
    "辽宁铁道职业技术学院",
    "辽宁建筑职业学院",
    "大连航运职业技术学院",
    "大连装备制造职业技术学院",
    "大连汽车职业技术学院",
    "辽宁现代服务职业技术学院",
    "辽宁冶金职业技术学院",
    "辽宁工程职业学院",
    "辽宁城市建设职业技术学院",
    "辽宁医药职业学院",
    "铁岭卫生职业学院",
    "沈阳北软信息职业技术学院",
    "辽宁政法职业学院",
    "辽宁民族师范高等专科学校",
    "辽宁轻工职业学院",
    "辽宁水利职业学院",
    "辽宁特殊教育师范高等专科学校",
    "吉林大学",
    "延边大学",
    "长春理工大学",
    "东北电力大学",
    "长春工业大学",
    "吉林建筑大学",
    "吉林化工学院",
    "吉林农业大学",
    "长春中医药大学",
    "东北师范大学",
    "北华大学",
    "通化师范学院",
    "吉林师范大学",
    "吉林工程技术师范学院",
    "长春师范大学",
    "白城师范学院",
    "吉林财经大学",
    "吉林体育学院",
    "吉林艺术学院",
    "吉林华桥外国语学院",
    "吉林工商学院",
    "长春工程学院",
    "吉林农业科技学院",
    "吉林警察学院",
    "长春大学",
    "长春光华学院",
    "长春工业大学人文信息学院",
    "长春理工大学光电信息学院",
    "长春财经学院",
    "吉林建筑大学城建学院",
    "长春建筑学院",
    "长春科技学院",
    "吉林动画学院",
    "吉林师范大学博达学院",
    "长春大学旅游学院",
    "东北师范大学人文学院",
    "吉林医药学院",
    "长春师范高等专科学校",
    "辽源职业技术学院",
    "四平职业大学",
    "长春汽车工业高等专科学校",
    "长春金融高等专科学校",
    "长春医学高等专科学校",
    "吉林交通职业技术学院",
    "长春东方职业学院",
    "吉林司法警官职业学院",
    "吉林电子信息职业技术学院",
    "吉林工业职业技术学院",
    "吉林工程职业学院",
    "长春职业技术学院",
    "白城医学高等专科学校",
    "长春信息技术职业学院",
    "松原职业技术学院",
    "吉林铁道职业技术学院",
    "白城职业技术学院",
    "长白山职业技术学院",
    "吉林科技职业技术学院",
    "延边职业技术学院",
    "吉林城市职业技术学院",
    "吉林职业技术学院",
    "黑龙江大学",
    "哈尔滨工业大学",
    "哈尔滨理工大学",
    "哈尔滨工程大学",
    "黑龙江科技大学",
    "东北石油大学",
    "佳木斯大学",
    "黑龙江八一农垦大学",
    "东北农业大学",
    "东北林业大学",
    "哈尔滨医科大学",
    "黑龙江中医药大学",
    "牡丹江医学院",
    "哈尔滨师范大学",
    "齐齐哈尔大学",
    "牡丹江师范学院",
    "哈尔滨学院",
    "大庆师范学院",
    "绥化学院",
    "哈尔滨商业大学",
    "哈尔滨体育学院",
    "哈尔滨金融学院",
    "齐齐哈尔医学院",
    "黑龙江工业学院",
    "黑龙江东方学院",
    "哈尔滨信息工程学院",
    "黑龙江工程学院",
    "齐齐哈尔工程学院",
    "黑龙江外国语学院",
    "黑龙江财经学院",
    "哈尔滨石油学院",
    "黑龙江工商学院",
    "哈尔滨远东理工学院",
    "哈尔滨剑桥学院",
    "黑龙江工程学院昆仑旅游学院",
    "哈尔滨广厦学院",
    "哈尔滨华德学院",
    "黑河学院",
    "哈尔滨音乐学院",
    "齐齐哈尔高等师范专科学校",
    "伊春职业学院",
    "牡丹江大学",
    "黑龙江职业学院",
    "黑龙江建筑职业技术学院",
    "黑龙江艺术职业学院",
    "大庆职业学院",
    "黑龙江林业职业技术学院",
    "黑龙江农业职业技术学院",
    "黑龙江农业工程职业学院",
    "黑龙江农垦职业学院",
    "黑龙江司法警官职业学院",
    "鹤岗师范高等专科学校",
    "哈尔滨电力职业技术学院",
    "哈尔滨铁道职业技术学院",
    "大兴安岭职业学院",
    "黑龙江农业经济职业学院",
    "哈尔滨职业技术学院",
    "哈尔滨传媒职业学院",
    "黑龙江生物科技职业学院",
    "黑龙江商业职业学院",
    "黑龙江公安警官职业学院",
    "黑龙江信息技术职业学院",
    "哈尔滨江南职业技术学院",
    "黑龙江农垦科技职业学院",
    "黑龙江旅游职业技术学院",
    "黑龙江三江美术职业学院",
    "黑龙江生态工程职业学院",
    "黑龙江煤炭职业技术学院",
    "七台河职业学院",
    "黑龙江民族职业学院",
    "大庆医学高等专科学校",
    "黑龙江交通职业技术学院",
    "哈尔滨应用职业技术学院",
    "黑龙江幼儿师范高等专科学校",
    "哈尔滨科学技术职业学院",
    "黑龙江粮食职业学院",
    "佳木斯职业学院",
    "黑龙江护理高等专科学校",
    "哈尔滨工程技术职业学院",
    "齐齐哈尔理工职业学院",
    "哈尔滨幼儿师范高等专科学校",
    "黑龙江冰雪体育职业学院",
    "复旦大学",
    "同济大学",
    "上海交通大学",
    "华东理工大学",
    "上海理工大学",
    "上海海事大学",
    "东华大学",
    "上海电力学院",
    "上海应用技术大学",
    "上海健康医学院",
    "上海海洋大学",
    "上海中医药大学",
    "华东师范大学",
    "上海师范大学",
    "上海外国语大学",
    "上海财经大学",
    "上海对外经贸大学",
    "上海海关学院",
    "华东政法大学",
    "上海体育学院",
    "上海音乐学院",
    "上海戏剧学院",
    "上海大学",
    "上海公安学院",
    "上海工程技术大学",
    "上海立信会计金融学院",
    "上海电机学院",
    "上海杉达学院",
    "上海政法学院",
    "上海第二工业大学",
    "上海商学院",
    "上海建桥学院",
    "上海兴伟学院",
    "上海视觉艺术学院",
    "上海外国语大学贤达经济人文学院",
    "上海师范大学天华学院",
    "上海科技大学",
    "上海市",
    "上海纽约大学",
    "上海旅游高等专科学校",
    "上海东海职业技术学院",
    "上海工商职业技术学院",
    "上海出版印刷高等专科学校",
    "上海行健职业学院",
    "上海城建职业学院",
    "上海交通职业技术学院",
    "上海海事职业技术学院",
    "上海电子信息职业技术学院",
    "上海震旦职业学院",
    "上海民远职业技术学院",
    "上海欧华职业技术学院",
    "上海思博职业技术学院",
    "上海立达职业技术学院",
    "上海工艺美术职业学院",
    "上海济光职业技术学院",
    "上海工商外国语职业学院",
    "上海科学技术职业学院",
    "上海农林职业技术学院",
    "上海邦德职业技术学院",
    "上海中侨职业技术学院",
    "上海电影艺术职业学院",
    "上海中华职业技术学院",
    "上海工会管理职业学院",
    "上海体育职业学院",
    "上海民航职业技术学院",
    "南京大学",
    "苏州大学",
    "东南大学",
    "南京航空航天大学",
    "南京理工大学",
    "江苏科技大学",
    "中国矿业大学",
    "南京工业大学",
    "常州大学",
    "南京邮电大学",
    "河海大学",
    "江南大学",
    "南京林业大学",
    "江苏大学",
    "南京信息工程大学",
    "南通大学",
    "盐城工学院",
    "南京农业大学",
    "南京医科大学",
    "徐州医科大学",
    "南京中医药大学",
    "中国药科大学",
    "南京师范大学",
    "江苏师范大学",
    "淮阴师范学院",
    "盐城师范学院",
    "南京财经大学",
    "江苏警官学院",
    "南京体育学院",
    "南京艺术学院",
    "苏州科技大学",
    "常熟理工学院",
    "淮阴工学院",
    "常州工学院",
    "扬州大学",
    "三江学院",
    "南京工程学院",
    "南京审计大学",
    "南京晓庄学院",
    "江苏理工学院",
    "淮海工学院",
    "徐州工程学院",
    "南京特殊教育师范学院",
    "南通理工学院",
    "南京森林警察学院",
    "东南大学成贤学院",
    "泰州学院",
    "无锡太湖学院",
    "金陵科技学院",
    "中国矿业大学徐海学院",
    "南京大学金陵学院",
    "南京理工大学紫金学院",
    "南京航空航天大学金城学院",
    "中国传媒大学南广学院",
    "南京理工大学泰州科技学院",
    "南京师范大学泰州学院",
    "南京工业大学浦江学院",
    "南京师范大学中北学院",
    "南京医科大学康达学院",
    "南京中医药大学翰林学院",
    "南京信息工程大学滨江学院",
    "苏州大学文正学院",
    "苏州大学应用技术学院",
    "苏州科技大学天平学院",
    "江苏大学京江学院",
    "扬州大学广陵学院",
    "江苏师范大学科文学院",
    "南京邮电大学通达学院",
    "南京财经大学红山学院",
    "江苏科技大学苏州理工学院",
    "常州大学怀德学院",
    "南通大学杏林学院",
    "南京审计大学金审学院",
    "宿迁学院",
    "江苏第二师范学院",
    "西交利物浦大学",
    "昆山杜克大学",
    "盐城幼儿师范高等专科学校",
    "苏州幼儿师范高等专科学校",
    "民办明达职业技术学院",
    "无锡职业技术学院",
    "江苏建筑职业技术学院",
    "南京工业职业技术学院",
    "江苏工程职业技术学院",
    "苏州工艺美术职业技术学院",
    "连云港职业技术学院",
    "镇江市高等专科学校",
    "南通职业大学",
    "苏州职业大学",
    "沙洲职业工学院",
    "扬州市职业大学",
    "连云港师范高等专科学校",
    "江苏经贸职业技术学院",
    "九州职业技术学院",
    "硅湖职业技术学院",
    "泰州职业技术学院",
    "常州信息职业技术学院",
    "江苏联合职业技术学院",
    "江苏海事职业技术学院",
    "应天职业技术学院",
    "无锡科技职业学院",
    "盐城卫生职业技术学院",
    "扬州环境资源职业技术学院",
    "南通科技职业学院",
    "苏州经贸职业技术学院",
    "苏州工业职业技术学院",
    "苏州托普信息职业技术学院",
    "苏州卫生职业技术学院",
    "无锡商业职业技术学院",
    "南通航运职业技术学院",
    "南京交通职业技术学院",
    "淮安信息职业技术学院",
    "江苏农牧科技职业学院",
    "常州纺织服装职业技术学院",
    "苏州农业职业技术学院",
    "苏州工业园区职业技术学院",
    "太湖创意职业技术学院",
    "炎黄职业技术学院",
    "南京科技职业学院",
    "正德职业技术学院",
    "钟山职业技术学院",
    "无锡南洋职业技术学院",
    "江南影视艺术职业学院",
    "金肯职业技术学院",
    "常州轻工职业技术学院",
    "常州工程职业技术学院",
    "江苏农林职业技术学院",
    "江苏食品药品职业技术学院",
    "建东职业技术学院",
    "南京铁道职业技术学院",
    "徐州工业职业技术学院",
    "江苏信息职业技术学院",
    "宿迁职业技术学院",
    "南京信息职业技术学院",
    "江海职业技术学院",
    "常州机电职业技术学院",
    "江阴职业技术学院",
    "无锡城市职业技术学院",
    "无锡工艺职业技术学院",
    "金山职业技术学院",
    "苏州健雄职业技术学院",
    "盐城工业职业技术学院",
    "江苏财经职业技术学院",
    "扬州工业职业技术学院",
    "苏州港大思培科技职业学院",
    "昆山登云科技职业学院",
    "南京视觉艺术职业学院",
    "江苏城市职业学院",
    "南京城市职业学院",
    "南京机电职业技术学院",
    "苏州高博软件技术职业学院",
    "南京旅游职业学院",
    "江苏建康职业学院",
    "苏州信息职业技术学院",
    "宿迁泽达职业技术学院",
    "苏州工业园区服务外包职业学院",
    "徐州幼儿师范高等专科学校",
    "徐州生物工程职业技术学院",
    "江苏商贸职业学院",
    "南通师范高等专科学校",
    "扬州中瑞酒店职业学院",
    "江苏护理职业学院",
    "江苏财会职业学院",
    "江苏城乡建设职业学院",
    "江苏航空职业技术学院",
    "江苏安全技术职业学院",
    "浙江大学",
    "杭州电子科技大学",
    "浙江工业大学",
    "浙江理工大学",
    "浙江海洋大学",
    "浙江农林大学",
    "温州医科大学",
    "浙江中医药大学",
    "浙江师范大学",
    "杭州师范大学",
    "湖州师范学院",
    "绍兴文理学院",
    "台州学院",
    "温州大学",
    "丽水学院",
    "浙江工商大学",
    "嘉兴学院",
    "中国美术学院",
    "中国计量大学",
    "公安海警学院",
    "浙江万里学院",
    "浙江科技学院",
    "宁波工程学院",
    "浙江水利水电学院",
    "浙江财经大学",
    "浙江警察学院",
    "衢州学院",
    "宁波大学",
    "浙江传媒学院",
    "浙江树人学院",
    "浙江越秀外国语学院",
    "宁波大红鹰学院",
    "浙江大学城市学院",
    "浙江大学宁波理工学院",
    "杭州医学院",
    "浙江工业大学之江学院",
    "浙江师范大学行知学院",
    "宁波大学科学技术学院",
    "杭州电子科技大学信息工程学院",
    "浙江理工大学科技与艺术学院",
    "浙江海洋大学东海科学技术学院",
    "浙江农林大学暨阳学院",
    "温州医科大学仁济学院",
    "浙江中医药大学滨江学院",
    "杭州师范大学钱江学院",
    "湖州师范学院求真学院",
    "绍兴文理学院元培学院",
    "温州大学瓯江学院",
    "浙江工商大学杭州商学院",
    "嘉兴学院南湖学院",
    "中国计量大学现代科技学院",
    "浙江财经大学东方学院",
    "温州商学院",
    "同济大学浙江学院",
    "上海财经大学浙江学院",
    "浙江外国语学院",
    "浙江音乐学院",
    "宁波诺丁汉大学",
    "温州肯恩大学",
    "宁波职业技术学院",
    "温州职业技术学院",
    "浙江交通职业技术学院",
    "金华职业技术学院",
    "宁波城市职业技术学院",
    "浙江电力职业技术学院",
    "浙江同济科技职业学院",
    "浙江工商职业技术学院",
    "台州职业技术学院",
    "浙江工贸职业技术学院",
    "浙江医药高等专科学校",
    "浙江机电职业技术学院",
    "浙江建设职业技术学院",
    "浙江艺术职业学院",
    "浙江经贸职业技术学院",
    "浙江商业职业技术学院",
    "浙江经济职业技术学院",
    "浙江旅游职业学院",
    "浙江育英职业技术学院",
    "浙江警官职业学院",
    "浙江金融职业学院",
    "浙江工业职业技术学院",
    "杭州职业技术学院",
    "嘉兴职业技术学院",
    "湖州职业技术学院",
    "绍兴职业技术学院",
    "衢州职业技术学院",
    "丽水职业技术学院",
    "浙江东方职业技术学院",
    "义乌工商职业技术学院",
    "浙江纺织服装职业技术学院",
    "杭州科技职业技术学院",
    "浙江长征职业技术学院",
    "嘉兴南洋职业技术学院",
    "浙江广厦建设职业技术学院",
    "杭州万向职业技术学院",
    "浙江邮电职业技术学院",
    "宁波卫生职业技术学院",
    "台州科技职业学院",
    "浙江国际海运职业技术学院",
    "浙江体育职业技术学院",
    "温州科技职业学院",
    "浙江汽车职业技术学院",
    "浙江横店影视职业学院",
    "浙江农业商贸职业学院",
    "浙江特殊教育职业学院",
    "浙江安防职业技术学院",
    "浙江舟山群岛新区旅游与健康职业学院",
    "安徽大学",
    "中国科学技术大学",
    "合肥工业大学",
    "安徽工业大学",
    "安徽理工大学",
    "安徽工程大学",
    "安徽农业大学",
    "安徽医科大学",
    "蚌埠医学院",
    "皖南医学院",
    "安徽中医药大学",
    "安徽师范大学",
    "阜阳师范学院",
    "安庆师范大学",
    "淮北师范大学",
    "黄山学院",
    "皖西学院",
    "滁州学院",
    "安徽财经大学",
    "宿州学院",
    "巢湖学院",
    "淮南师范学院",
    "铜陵学院",
    "安徽建筑大学",
    "安徽科技学院",
    "安徽三联学院",
    "合肥学院",
    "蚌埠学院",
    "池州学院",
    "安徽新华学院",
    "安徽文达信息工程学院",
    "亳州学院",
    "安徽外国语学院",
    "安徽财经大学商学院",
    "安徽大学江淮学院",
    "安徽信息工程学院",
    "安徽工业大学工商学院",
    "安徽建筑大学城市建设学院",
    "安徽农业大学经济技术学院",
    "安徽师范大学皖江学院",
    "安徽医科大学临床医学院",
    "阜阳师范学院信息工程学院",
    "淮北师范大学信息学院",
    "合肥师范学院",
    "河海大学文天学院",
    "安徽职业技术学院",
    "淮北职业技术学院",
    "芜湖职业技术学院",
    "淮南联合大学",
    "安徽商贸职业技术学院",
    "安徽水利水电职业技术学院",
    "阜阳职业技术学院",
    "铜陵职业技术学院",
    "民办万博科技职业学院",
    "安徽警官职业学院",
    "淮南职业技术学院",
    "安徽工业经济职业技术学院",
    "合肥通用职业技术学院",
    "安徽工贸职业技术学院",
    "宿州职业技术学院",
    "六安职业技术学院",
    "安徽电子信息职业技术学院",
    "民办合肥经济技术职业学院",
    "安徽交通职业技术学院",
    "安徽体育运动职业技术学院",
    "安徽中医药高等专科学校",
    "安徽医学高等专科学校",
    "合肥职业技术学院",
    "滁州职业技术学院",
    "池州职业技术学院",
    "宣城职业技术学院",
    "安徽广播影视职业技术学院",
    "民办合肥滨湖职业技术学院",
    "安徽电气工程职业技术学院",
    "安徽冶金科技职业学院",
    "安徽城市管理职业学院",
    "安徽机电职业技术学院",
    "安徽工商职业学院",
    "安徽中澳科技职业学院",
    "阜阳科技职业学院",
    "亳州职业技术学院",
    "安徽国防科技职业学院",
    "安庆职业技术学院",
    "安徽艺术职业学院",
    "马鞍山师范高等专科学校",
    "安徽财贸职业学院",
    "安徽国际商务职业学院",
    "安徽公安职业学院",
    "安徽林业职业技术学院",
    "安徽审计职业学院",
    "安徽新闻出版职业技术学院",
    "安徽邮电职业技术学院",
    "安徽工业职业技术学院",
    "民办合肥财经职业学院",
    "安庆医药高等专科学校",
    "安徽涉外经济职业学院",
    "安徽绿海商务职业学院",
    "合肥共达职业技术学院",
    "蚌埠经济技术职业学院",
    "民办安徽旅游职业学院",
    "徽商职业学院",
    "马鞍山职业技术学院",
    "安徽现代信息工程职业学院",
    "安徽矿业职业技术学院",
    "合肥信息技术职业学院",
    "桐城师范高等专科学校",
    "黄山职业技术学院",
    "滁州城市职业学院",
    "安徽汽车职业技术学院",
    "皖西卫生职业学院",
    "合肥幼儿师范高等专科学校",
    "安徽长江职业学院",
    "安徽扬子职业技术学院",
    "安徽黄梅戏艺术职业学院",
    "安徽粮食工程职业学院",
    "安徽人口职业学院",
    "合肥科技职业学院",
    "皖北卫生职业学院",
    "阜阳幼儿师范高等专科学校",
    "厦门大学",
    "华侨大学",
    "福州大学",
    "福建工程学院",
    "福建农林大学",
    "集美大学",
    "福建医科大学",
    "福建中医药大学",
    "福建师范大学",
    "闽江学院",
    "武夷学院",
    "宁德师范学院",
    "泉州师范学院",
    "闽南师范大学",
    "厦门理工学院",
    "三明学院",
    "龙岩学院",
    "福建商学院",
    "福建警察学院",
    "莆田学院",
    "仰恩大学",
    "厦门医学院",
    "厦门华厦学院",
    "闽南理工学院",
    "福建师范大学闽南科技学院",
    "福建农林大学东方学院",
    "厦门工学院",
    "阳光学院",
    "厦门大学嘉庚学院",
    "福州大学至诚学院",
    "集美大学诚毅学院",
    "福建师范大学协和学院",
    "福州外语外贸学院",
    "福建江夏学院",
    "泉州信息工程学院",
    "福州理工学院",
    "福建农林大学金山学院",
    "福建船政交通职业学院",
    "漳州职业技术学院",
    "闽西职业技术学院",
    "黎明职业大学",
    "福建华南女子职业学院",
    "福州职业技术学院",
    "福建林业职业技术学院",
    "福建信息职业技术学院",
    "福建水利电力职业技术学院",
    "福建电力职业技术学院",
    "厦门海洋职业技术学院",
    "福建农业职业技术学院",
    "福建卫生职业技术学院",
    "泉州医学高等专科学校",
    "福州英华职业学院",
    "泉州纺织服装职业学院",
    "泉州华光职业学院",
    "泉州理工职业学院",
    "福建警官职业学院",
    "闽北职业技术学院",
    "福州黎明职业技术学院",
    "厦门演艺职业学院",
    "厦门华天涉外职业技术学院",
    "福州科技职业技术学院",
    "泉州经贸职业技术学院",
    "福建对外经济贸易职业技术学院",
    "湄洲湾职业技术学院",
    "福建生物工程职业技术学院",
    "福建艺术职业学院",
    "福建幼儿师范高等专科学校",
    "厦门城市职业学院",
    "泉州工艺美术职业学院",
    "三明职业技术学院",
    "宁德职业技术学院",
    "福州软件职业技术学院",
    "厦门兴才职业技术学院",
    "厦门软件职业技术学院",
    "福建体育职业技术学院",
    "漳州城市职业学院",
    "厦门南洋职业学院",
    "厦门东海职业技术学院",
    "漳州科技职业学院",
    "漳州理工职业学院",
    "武夷山职业学院",
    "漳州卫生职业学院",
    "泉州海洋职业学院",
    "泉州轻工职业学院",
    "厦门安防科技职业学院",
    "泉州幼儿师范高等专科学校",
    "闽江师范高等专科学校",
    "泉州工程职业技术学院",
    "南昌大学",
    "华东交通大学",
    "东华理工大学",
    "南昌航空大学",
    "江西理工大学",
    "景德镇陶瓷大学",
    "江西农业大学",
    "江西中医药大学",
    "赣南医学院",
    "江西师范大学",
    "上饶师范学院",
    "宜春学院",
    "赣南师范大学",
    "井冈山大学",
    "江西财经大学",
    "江西科技学院",
    "景德镇学院",
    "萍乡学院",
    "江西科技师范大学",
    "南昌工程学院",
    "江西警察学院",
    "新余学院",
    "九江学院",
    "江西工程学院",
    "南昌理工学院",
    "江西应用科技学院",
    "江西服装学院",
    "南昌工学院",
    "南昌大学科学技术学院",
    "南昌大学共青学院",
    "华东交通大学理工学院",
    "东华理工大学长江学院",
    "南昌航空大学科技学院",
    "江西理工大学应用科学学院",
    "景德镇陶瓷大学科技艺术学院",
    "江西农业大学南昌商学院",
    "江西中医药大学科技学院",
    "江西师范大学科学技术学院",
    "赣南师范大学科技学院",
    "江西科技师范大学理工学院",
    "江西财经大学现代经济管理学院",
    "南昌师范学院",
    "江西工业职业技术学院",
    "江西医学高等专科学校",
    "九江职业大学",
    "九江职业技术学院",
    "江西司法警官职业学院",
    "江西陶瓷工艺美术职业技术学院",
    "江西旅游商贸职业学院",
    "江西电力职业技术学院",
    "江西环境工程职业学院",
    "江西艺术职业学院",
    "鹰潭职业技术学院",
    "江西信息应用职业技术学院",
    "江西交通职业技术学院",
    "江西财经职业学院",
    "江西应用技术职业学院",
    "江西现代职业技术学院",
    "江西工业工程职业技术学院",
    "江西机电职业技术学院",
    "江西科技职业学院",
    "南昌职业学院",
    "江西外语外贸职业学院",
    "江西工业贸易职业技术学院",
    "宜春职业技术学院",
    "江西应用工程职业学院",
    "江西生物科技职业学院",
    "江西建设职业技术学院",
    "抚州职业技术学院",
    "南昌师范高等专科学校",
    "江西中医药高等专科学校",
    "江西先锋软件职业技术学院",
    "江西经济管理职业学院",
    "江西制造职业技术学院",
    "江西工程职业学院",
    "江西青年职业学院",
    "上饶职业技术学院",
    "江西航空职业技术学院",
    "江西农业工程职业学院",
    "赣西科技职业学院",
    "江西卫生职业学院",
    "江西新能源科技职业学院",
    "江西枫林涉外经贸职业学院",
    "江西泰豪动漫职业学院",
    "江西冶金职业技术学院",
    "江西管理职业学院",
    "江西传媒职业学院",
    "江西工商职业技术学院",
    "景德镇陶瓷职业技术学院",
    "共青科技职业学院",
    "赣州师范高等专科学校",
    "江西水利职业学院",
    "宜春幼儿师范高等专科学校",
    "吉安职业技术学院",
    "江西洪州职业学院",
    "江西师范高等专科学校",
    "南昌影视传播职业学院",
    "赣南卫生健康职业学院",
    "山东大学",
    "中国海洋大学",
    "山东科技大学",
    "中国石油大学（华东）",
    "青岛科技大学",
    "济南大学",
    "青岛理工大学",
    "山东建筑大学",
    "齐鲁工业大学",
    "山东理工大学",
    "山东农业大学",
    "青岛农业大学",
    "潍坊医学院",
    "泰山医学院",
    "滨州医学院",
    "山东中医药大学",
    "济宁医学院",
    "山东师范大学",
    "曲阜师范大学",
    "聊城大学",
    "德州学院",
    "滨州学院",
    "鲁东大学",
    "临沂大学",
    "泰山学院",
    "济宁学院",
    "菏泽学院",
    "山东财经大学",
    "山东体育学院",
    "山东艺术学院",
    "齐鲁医药学院",
    "青岛滨海学院",
    "枣庄学院",
    "山东工艺美术学院",
    "青岛大学",
    "烟台大学",
    "潍坊学院",
    "山东警察学院",
    "山东交通学院",
    "山东工商学院",
    "山东女子学院",
    "烟台南山学院",
    "潍坊科技学院",
    "山东英才学院",
    "青岛恒星科技学院",
    "青岛黄海学院",
    "山东现代学院",
    "山东协和学院",
    "烟台大学文经学院",
    "聊城大学东昌学院",
    "青岛理工大学琴岛学院",
    "山东师范大学历山学院",
    "山东财经大学燕山学院",
    "中国石油大学胜利学院",
    "山东科技大学泰山科技学院",
    "山东华宇工学院",
    "青岛工学院",
    "青岛农业大学海都学院",
    "齐鲁理工学院",
    "山东财经大学东方学院",
    "济南大学泉城学院",
    "山东政法学院",
    "齐鲁师范学院",
    "山东青年政治学院",
    "北京电影学院现代创意媒体学院",
    "山东管理学院",
    "山东农业工程学院",
    "山东医学高等专科学校",
    "菏泽医学专科学校",
    "山东商业职业技术学院",
    "山东电力高等专科学校",
    "日照职业技术学院",
    "曲阜远东职业技术学院",
    "青岛职业技术学院",
    "威海职业学院",
    "山东职业学院",
    "山东劳动职业技术学院",
    "莱芜职业技术学院",
    "济宁职业技术学院",
    "潍坊职业学院",
    "烟台职业学院",
    "东营职业学院",
    "聊城职业技术学院",
    "滨州职业学院",
    "山东科技职业学院",
    "山东服装职业学院",
    "德州科技职业学院",
    "山东力明科技职业学院",
    "山东圣翰财贸职业学院",
    "山东水利职业学院",
    "山东畜牧兽医职业学院",
    "青岛飞洋职业技术学院",
    "东营科技职业学院",
    "山东交通职业学院",
    "淄博职业学院",
    "山东外贸职业学院",
    "青岛酒店管理职业技术学院",
    "山东信息职业技术学院",
    "青岛港湾职业技术学院",
    "山东胜利职业学院",
    "山东经贸职业学院",
    "山东工业职业学院",
    "山东化工职业学院",
    "青岛求实职业技术学院",
    "济南职业学院",
    "烟台工程职业技术学院",
    "山东凯文科技职业学院",
    "山东外国语职业学院",
    "潍坊工商职业学院",
    "德州职业技术学院",
    "枣庄科技职业学院",
    "淄博师范高等专科学校",
    "山东中医药高等专科学校",
    "济南工程职业技术学院",
    "山东电子职业技术学院",
    "山东旅游职业学院",
    "山东铝业职业学院",
    "山东杏林科技职业学院",
    "泰山职业技术学院",
    "山东外事翻译职业学院",
    "山东药品食品职业学院",
    "山东商务职业学院",
    "山东轻工职业学院",
    "山东城市建设职业学院",
    "烟台汽车工程职业学院",
    "山东司法警官职业学院",
    "菏泽家政职业学院",
    "山东传媒职业学院",
    "临沂职业学院",
    "枣庄职业学院",
    "山东理工职业学院",
    "山东文化产业职业学院",
    "青岛远洋船员职业学院",
    "济南幼儿师范高等专科学校",
    "济南护理职业学院",
    "泰山护理职业学院",
    "山东海事职业学院",
    "潍坊护理职业学院",
    "潍坊工程职业学院",
    "菏泽职业学院",
    "山东艺术设计职业学院",
    "威海海洋职业学院",
    "山东特殊教育职业学院",
    "烟台黄金职业学院",
    "华北水利水电大学",
    "郑州大学",
    "河南理工大学",
    "郑州轻工业学院",
    "河南工业大学",
    "河南科技大学",
    "中原工学院",
    "河南农业大学",
    "河南科技学院",
    "河南牧业经济学院",
    "河南中医药大学",
    "新乡医学院",
    "河南大学",
    "河南师范大学",
    "信阳师范学院",
    "周口师范学院",
    "安阳师范学院",
    "许昌学院",
    "南阳师范学院",
    "洛阳师范学院",
    "商丘师范学院",
    "河南财经政法大学",
    "郑州航空工业管理学院",
    "黄淮学院",
    "平顶山学院",
    "郑州工程技术学院",
    "洛阳理工学院",
    "新乡学院",
    "信阳农林学院",
    "河南工学院",
    "安阳工学院",
    "河南工程学院",
    "河南财政金融学院",
    "南阳理工学院",
    "河南城建学院",
    "河南警察学院",
    "黄河科技学院",
    "铁道警察学院",
    "郑州科技学院",
    "郑州工业应用技术学院",
    "郑州师范学院",
    "郑州财经学院",
    "黄河交通学院",
    "商丘工学院",
    "河南大学民生学院",
    "河南师范大学新联学院",
    "信阳学院",
    "安阳学院",
    "新乡医学院三全学院",
    "河南科技学院新科学院",
    "郑州工商学院",
    "中原工学院信息商务学院",
    "商丘学院",
    "郑州成功财经学院",
    "郑州升达经贸管理学院",
    "河南职业技术学院",
    "漯河职业技术学院",
    "三门峡职业技术学院",
    "郑州铁路职业技术学院",
    "开封大学",
    "焦作大学",
    "濮阳职业技术学院",
    "郑州电力高等专科学校",
    "黄河水利职业技术学院",
    "许昌职业技术学院",
    "河南工业和信息化职业学院",
    "河南水利与环境职业学院",
    "商丘职业技术学院",
    "平顶山工业职业技术学院",
    "周口职业技术学院",
    "济源职业技术学院",
    "河南司法警官职业学院",
    "鹤壁职业技术学院",
    "河南工业职业技术学院",
    "郑州澍青医学高等专科学校",
    "焦作师范高等专科学校",
    "河南检察职业学院",
    "河南质量工程职业学院",
    "郑州信息科技职业学院",
    "漯河医学高等专科学校",
    "南阳医学高等专科学校",
    "商丘医学高等专科学校",
    "郑州电子信息职业技术学院",
    "信阳职业技术学院",
    "嵩山少林武术职业学院",
    "郑州工业安全职业学院",
    "永城职业学院",
    "河南经贸职业学院",
    "河南交通职业技术学院",
    "河南农业职业学院",
    "郑州旅游职业学院",
    "郑州职业技术学院",
    "河南信息统计职业学院",
    "河南林业职业学院",
    "河南工业贸易职业学院",
    "郑州电力职业技术学院",
    "周口科技职业学院",
    "河南建筑职业技术学院",
    "漯河食品职业学院",
    "郑州城市职业学院",
    "安阳职业技术学院",
    "新乡职业技术学院",
    "驻马店职业技术学院",
    "焦作工贸职业学院",
    "许昌陶瓷职业学院",
    "郑州理工职业学院",
    "郑州信息工程职业学院",
    "长垣烹饪职业技术学院",
    "开封文化艺术职业学院",
    "河南应用技术职业学院",
    "河南艺术职业学院",
    "河南机电职业学院",
    "河南护理职业学院",
    "许昌电气职业学院",
    "信阳涉外职业技术学院",
    "鹤壁汽车工程职业学院",
    "南阳职业学院",
    "郑州商贸旅游职业学院",
    "河南推拿职业学院",
    "洛阳职业技术学院",
    "郑州幼儿师范高等专科学校",
    "安阳幼儿师范高等专科学校",
    "郑州黄河护理职业学院",
    "河南医学高等专科学校",
    "郑州财税金融职业学院",
    "南阳农业职业学院",
    "洛阳科技职业学院",
    "鹤壁能源化工职业学院",
    "平顶山文化艺术职业学院",
    "武汉大学",
    "华中科技大学",
    "武汉科技大学",
    "长江大学",
    "武汉工程大学",
    "中国地质大学（武汉）",
    "武汉纺织大学",
    "武汉轻工大学",
    "武汉理工大学",
    "湖北工业大学",
    "华中农业大学",
    "湖北中医药大学",
    "华中师范大学",
    "湖北大学",
    "湖北师范大学",
    "黄冈师范学院",
    "湖北民族学院",
    "汉江师范学院",
    "湖北文理学院",
    "中南财经政法大学",
    "武汉体育学院",
    "湖北美术学院",
    "中南民族大学",
    "湖北汽车工业学院",
    "湖北工程学院",
    "湖北理工学院",
    "湖北科技学院",
    "湖北医药学院",
    "江汉大学",
    "三峡大学",
    "湖北警官学院",
    "荆楚理工学院",
    "武汉音乐学院",
    "湖北经济学院",
    "武汉商学院",
    "武汉东湖学院",
    "汉口学院",
    "武昌首义学院",
    "武昌理工学院",
    "武汉生物工程学院",
    "武汉晴川学院",
    "湖北大学知行学院",
    "武汉科技大学城市学院",
    "三峡大学科技学院",
    "江汉大学文理学院",
    "湖北工业大学工程技术学院",
    "武汉工程大学邮电与信息工程学院",
    "武汉纺织大学外经贸学院",
    "武昌工学院",
    "武汉工商学院",
    "长江大学工程技术学院",
    "长江大学文理学院",
    "湖北商贸学院",
    "湖北汽车工业学院科技学院",
    "湖北医药学院药护学院",
    "湖北民族学院科技学院",
    "湖北经济学院法商学院",
    "武汉体育学院体育科技学院",
    "湖北师范大学文理学院",
    "湖北文理学院理工学院",
    "湖北工程学院新技术学院",
    "文华学院",
    "武汉学院",
    "武汉工程科技学院",
    "武汉华夏理工学院",
    "武汉传媒学院",
    "武汉设计工程学院",
    "湖北第二师范学院",
    "武汉职业技术学院",
    "黄冈职业技术学院",
    "长江职业学院",
    "荆州理工职业学院",
    "湖北工业职业技术学院",
    "鄂州职业大学",
    "武汉城市职业学院",
    "湖北职业技术学院",
    "武汉船舶职业技术学院",
    "恩施职业技术学院",
    "襄阳职业技术学院",
    "武汉工贸职业学院",
    "荆州职业技术学院",
    "武汉工程职业技术学院",
    "仙桃职业学院",
    "湖北轻工职业技术学院",
    "湖北交通职业技术学院",
    "湖北中医药高等专科学校",
    "武汉航海职业技术学院",
    "武汉铁路职业技术学院",
    "武汉软件工程职业学院",
    "湖北三峡职业技术学院",
    "随州职业技术学院",
    "武汉电力职业技术学院",
    "湖北水利水电职业技术学院",
    "湖北城市建设职业技术学院",
    "武汉警官职业学院",
    "湖北生物科技职业学院",
    "湖北开放职业学院",
    "武汉科技职业学院",
    "武汉外语外事职业学院",
    "武汉信息传播职业技术学院",
    "武昌职业学院",
    "武汉商贸职业学院",
    "湖北艺术职业学院",
    "武汉交通职业学院",
    "咸宁职业技术学院",
    "长江工程职业技术学院",
    "江汉艺术职业学院",
    "武汉工业职业技术学院",
    "武汉民政职业学院",
    "鄂东职业技术学院",
    "湖北财税职业学院",
    "黄冈科技职业学院",
    "湖北国土资源职业学院",
    "湖北生态工程职业技术学院",
    "三峡电力职业学院",
    "湖北科技职业学院",
    "湖北青年职业学院",
    "湖北工程职业学院",
    "三峡旅游职业技术学院",
    "天门职业学院",
    "湖北体育职业学院",
    "襄阳汽车职业技术学院",
    "湖北幼儿师范高等专科学校",
    "湖北铁道运输职业学院",
    "武汉海事职业学院",
    "武当职业学院",
    "荆门职业学院",
    "武汉铁路桥梁职业学院",
    "湘潭大学",
    "吉首大学",
    "湖南大学",
    "中南大学",
    "湖南科技大学",
    "长沙理工大学",
    "湖南农业大学",
    "中南林业科技大学",
    "湖南中医药大学",
    "湖南师范大学",
    "湖南理工学院",
    "湘南学院",
    "衡阳师范学院",
    "邵阳学院",
    "怀化学院",
    "湖南文理学院",
    "湖南科技学院",
    "湖南人文科技学院",
    "湖南商学院",
    "南华大学",
    "长沙医学院",
    "长沙学院",
    "湖南工程学院",
    "湖南城市学院",
    "湖南工学院",
    "湖南财政经济学院",
    "湖南警察学院",
    "湖南工业大学",
    "湖南女子学院",
    "湖南第一师范学院",
    "湖南医药学院",
    "湖南涉外经济学院",
    "湘潭大学兴湘学院",
    "湖南工业大学科技学院",
    "湖南科技大学潇湘学院",
    "南华大学船山学院",
    "湖南商学院北津学院",
    "湖南师范大学树达学院",
    "湖南农业大学东方科技学院",
    "中南林业科技大学涉外学院",
    "湖南文理学院芙蓉学院",
    "湖南理工学院南湖学院",
    "衡阳师范学院南岳学院",
    "湖南工程学院应用技术学院",
    "湖南中医药大学湘杏学院",
    "吉首大学张家界学院",
    "长沙理工大学城南学院",
    "长沙师范学院",
    "湖南应用技术学院",
    "湖南信息学院",
    "湖南交通工程学院",
    "长沙民政职业技术学院",
    "湖南工业职业技术学院",
    "株洲师范高等专科学校",
    "湖南信息职业技术学院",
    "湖南税务高等专科学校",
    "湖南冶金职业技术学院",
    "长沙航空职业技术学院",
    "湖南大众传媒职业技术学院",
    "永州职业技术学院",
    "湖南铁道职业技术学院",
    "湖南科技职业学院",
    "湖南生物机电职业技术学院",
    "湖南交通职业技术学院",
    "湖南商务职业技术学院",
    "湖南体育职业学院",
    "湖南工程职业技术学院",
    "保险职业学院",
    "湖南外贸职业学院",
    "湖南网络工程职业学院",
    "邵阳职业技术学院",
    "湖南司法警官职业学院",
    "长沙商贸旅游职业技术学院",
    "湖南环境生物职业技术学院",
    "湖南邮电职业技术学院",
    "湘潭医卫职业技术学院",
    "郴州职业技术学院",
    "娄底职业技术学院",
    "张家界航空工业职业技术学院",
    "长沙环境保护职业技术学院",
    "湖南艺术职业学院",
    "湖南机电职业技术学院",
    "长沙职业技术学院",
    "怀化职业技术学院",
    "岳阳职业技术学院",
    "常德职业技术学院",
    "长沙南方职业学院",
    "潇湘职业学院",
    "湖南化工职业技术学院",
    "湖南城建职业技术学院",
    "湖南石油化工职业技术学院",
    "湖南中医药高等专科学校",
    "湖南民族职业学院",
    "湘西民族职业技术学院",
    "湖南财经工业职业技术学院",
    "益阳职业技术学院",
    "湖南工艺美术职业学院",
    "湖南九嶷职业技术学院",
    "湖南理工职业技术学院",
    "湖南软件职业学院",
    "湖南汽车工程职业学院",
    "长沙电力职业技术学院",
    "湖南水利水电职业技术学院",
    "湖南现代物流职业技术学院",
    "湖南高速铁路职业技术学院",
    "湖南铁路科技职业技术学院",
    "湖南安全技术职业学院",
    "湖南电气职业技术学院",
    "湖南外国语职业学院",
    "益阳医学高等专科学校",
    "湖南都市职业学院",
    "湖南电子科技职业学院",
    "湖南国防工业职业技术学院",
    "湖南高尔夫旅游职业学院",
    "湖南工商职业学院",
    "湖南三一工业职业技术学院",
    "长沙卫生职业学院",
    "湖南食品药品职业学院",
    "湖南有色金属职业技术学院",
    "湖南吉利汽车职业技术学院",
    "湖南幼儿师范高等专科学校",
    "湘南幼儿师范高等专科学校",
    "湖南劳动人事职业学院",
    "中山大学",
    "暨南大学",
    "汕头大学",
    "华南理工大学",
    "华南农业大学",
    "广东海洋大学",
    "广州医科大学",
    "广东医科大学",
    "广州中医药大学",
    "广东药科大学",
    "华南师范大学",
    "韶关学院",
    "惠州学院",
    "韩山师范学院",
    "岭南师范学院",
    "肇庆学院",
    "嘉应学院",
    "广州体育学院",
    "广州美术学院",
    "星海音乐学院",
    "广东技术师范学院",
    "深圳大学",
    "广东财经大学",
    "广东白云学院",
    "广州大学",
    "广州航海学院",
    "广东警官学院",
    "仲恺农业工程学院",
    "五邑大学",
    "广东金融学院",
    "电子科技大学中山学院",
    "广东石油化工学院",
    "东莞理工学院",
    "广东工业大学",
    "广东外语外贸大学",
    "佛山科学技术学院",
    "广东培正学院",
    "南方医科大学",
    "广东东软学院",
    "华南理工大学广州学院",
    "广州大学华软软件学院",
    "中山大学南方学院",
    "广东外语外贸大学南国商学院",
    "广东财经大学华商学院",
    "广东海洋大学寸金学院",
    "华南农业大学珠江学院",
    "广东技术师范学院天河学院",
    "北京师范大学珠海分校",
    "广东工业大学华立学院",
    "广州大学松田学院",
    "广州商学院",
    "北京理工大学珠海学院",
    "吉林大学珠海学院",
    "广州工商学院",
    "广东科技学院",
    "广东理工学院",
    "东莞理工学院城市学院",
    "中山大学新华学院",
    "广东第二师范学院",
    "南方科技大学",
    "北京师范大学-香港浸会大学联合国际学院",
    "香港中文大学（深圳）",
    "顺德职业技术学院",
    "广东轻工职业技术学院",
    "广东交通职业技术学院",
    "广东水利电力职业技术学院",
    "潮汕职业技术学院",
    "深圳职业技术学院",
    "民办南华工商学院",
    "私立华联学院",
    "广州民航职业技术学院",
    "广州番禺职业技术学院",
    "广东松山职业技术学院",
    "广东农工商职业技术学院",
    "广东新安职业技术学院",
    "佛山职业技术学院",
    "广东科学技术职业学院",
    "广东食品药品职业学院",
    "广州康大职业技术学院",
    "珠海艺术职业学院",
    "广东行政职业学院",
    "广东体育职业技术学院",
    "广东职业技术学院",
    "广东建设职业技术学院",
    "广东女子职业技术学院",
    "广东机电职业技术学院",
    "广东岭南职业技术学院",
    "汕尾职业技术学院",
    "罗定职业技术学院",
    "阳江职业技术学院",
    "河源职业技术学院",
    "广东邮电职业技术学院",
    "汕头职业技术学院",
    "揭阳职业技术学院",
    "深圳信息职业技术学院",
    "清远职业技术学院",
    "广东工贸职业技术学院",
    "广东司法警官职业学院",
    "广东亚视演艺职业学院",
    "广东省外语艺术职业学院",
    "广东文艺职业学院",
    "广州体育职业技术学院",
    "广州工程技术职业学院",
    "中山火炬职业技术学院",
    "江门职业技术学院",
    "茂名职业技术学院",
    "珠海城市职业技术学院",
    "广州涉外经济职业技术学院",
    "广州南洋理工职业学院",
    "广州科技职业技术学院",
    "惠州经济职业技术学院",
    "广东工商职业学院",
    "肇庆医学高等专科学校",
    "广州现代信息工程职业技术学院",
    "广东理工职业学院",
    "广州华南商贸职业学院",
    "广州华立科技职业学院",
    "广州城市职业学院",
    "广东工程职业技术学院",
    "广州铁路职业技术学院",
    "广东科贸职业学院",
    "广州科技贸易职业学院",
    "中山职业技术学院",
    "广州珠江职业技术学院",
    "广州松田职业学院",
    "广东文理职业学院",
    "广州城建职业学院",
    "东莞职业技术学院",
    "广东南方职业学院",
    "广州华商职业学院",
    "广州华夏职业学院",
    "广东环境保护工程职业学院",
    "广东青年职业学院",
    "广州东华职业学院",
    "广东创新科技职业学院",
    "广东舞蹈戏剧职业学院",
    "惠州卫生职业技术学院",
    "广东信息工程职业学院",
    "广东生态工程职业学院",
    "惠州城市职业学院",
    "广东碧桂园职业学院",
    "公安边防部队高等专科学校",
    "广东茂名健康职业学院",
    "广东酒店管理职业技术学院",
    "广东茂名幼儿师范专科学校",
    "广州卫生职业技术学院",
    "湛江幼儿师范专科学校",
    "广西大学",
    "广西科技大学",
    "桂林电子科技大学",
    "桂林理工大学",
    "广西医科大学",
    "右江民族医学院",
    "广西中医药大学",
    "桂林医学院",
    "广西师范大学",
    "广西师范学院",
    "广西民族师范学院",
    "河池学院",
    "玉林师范学院",
    "广西艺术学院",
    "广西民族大学",
    "百色学院",
    "梧州学院",
    "广西科技师范学院",
    "广西财经学院",
    "南宁学院",
    "钦州学院",
    "桂林航天工业学院",
    "桂林旅游学院",
    "贺州学院",
    "广西警察学院",
    "北海艺术设计学院",
    "广西大学行健文理学院",
    "广西科技大学鹿山学院",
    "广西民族大学相思湖学院",
    "广西师范大学漓江学院",
    "广西师范学院师园学院",
    "广西中医药大学赛恩斯新医药学院",
    "桂林电子科技大学信息科技学院",
    "桂林理工大学博文管理学院",
    "广西外国语学院",
    "北京航空航天大学北海学院",
    "广西机电职业技术学院",
    "广西体育高等专科学校",
    "南宁职业技术学院",
    "广西水利电力职业技术学院",
    "桂林师范高等专科学校",
    "广西职业技术学院",
    "柳州职业技术学院",
    "广西生态工程职业技术学院",
    "广西交通职业技术学院",
    "广西工业职业技术学院",
    "广西国际商务职业技术学院",
    "广西农业职业技术学院",
    "柳州铁道职业技术学院",
    "广西建设职业技术学院",
    "广西现代职业技术学院",
    "北海职业学院",
    "桂林山水职业学院",
    "广西经贸职业技术学院",
    "广西工商职业技术学院",
    "广西演艺职业学院",
    "广西电力职业技术学院",
    "广西城市职业学院",
    "广西英华国际职业学院",
    "柳州城市职业学院",
    "百色职业学院",
    "广西工程职业学院",
    "广西理工职业技术学院",
    "梧州职业学院",
    "广西经济职业学院",
    "广西幼儿师范高等专科学校",
    "广西科技职业学院",
    "广西卫生职业技术学院",
    "广西培贤国际职业学院",
    "广西金融职业技术学院",
    "广西中远职业学院",
    "玉柴职业技术学院",
    "广西蓝天航空职业学院",
    "海南大学",
    "海南热带海洋学院",
    "海南师范大学",
    "海南医学院",
    "海口经济学院",
    "琼台师范学院",
    "三亚学院",
    "海南职业技术学院",
    "三亚城市职业学院",
    "海南软件职业技术学院",
    "海南政法职业学院",
    "海南外国语职业学院",
    "海南经贸职业技术学院",
    "海南工商职业学院",
    "三亚航空旅游职业学院",
    "海南科技职业学院",
    "三亚理工职业学院",
    "海南体育职业技术学院",
    "重庆大学",
    "重庆邮电大学",
    "重庆交通大学",
    "重庆医科大学",
    "西南大学",
    "重庆师范大学",
    "重庆文理学院",
    "重庆三峡学院",
    "长江师范学院",
    "四川外国语大学",
    "西南政法大学",
    "四川美术学院",
    "重庆科技学院",
    "重庆理工大学",
    "重庆工商大学",
    "重庆工程学院",
    "重庆大学城市科技学院",
    "重庆警察学院",
    "重庆人文科技学院",
    "四川外国语大学重庆南方翻译学院",
    "重庆师范大学涉外商贸学院",
    "重庆工商大学融智学院",
    "重庆工商大学派斯学院",
    "重庆邮电大学移通学院",
    "重庆第二师范学院",
    "重庆航天职业技术学院",
    "重庆电力高等专科学校",
    "重庆工业职业技术学院",
    "重庆三峡职业学院",
    "重庆工贸职业技术学院",
    "重庆机电职业技术学院",
    "重庆电子工程职业学院",
    "重庆海联职业技术学院",
    "重庆信息技术职业学院",
    "重庆传媒职业学院",
    "重庆城市管理职业学院",
    "重庆工程职业技术学院",
    "重庆房地产职业学院",
    "重庆城市职业学院",
    "重庆水利电力职业技术学院",
    "重庆工商职业学院",
    "重庆应用技术职业学院",
    "重庆三峡医药高等专科学校",
    "重庆医药高等专科学校",
    "重庆青年职业技术学院",
    "重庆财经职业学院",
    "重庆科创职业学院",
    "重庆建筑工程职业学院",
    "重庆电讯职业学院",
    "重庆能源职业学院",
    "重庆商务职业学院",
    "重庆交通职业学院",
    "重庆化工职业学院",
    "重庆旅游职业学院",
    "重庆安全技术职业学院",
    "重庆公共运输职业学院",
    "重庆艺术工程职业学院",
    "重庆轻工职业学院",
    "重庆电信职业学院",
    "重庆经贸职业学院",
    "重庆幼儿师范高等专科学校",
    "重庆文化艺术职业学院",
    "重庆服装工程职业学院",
    "重庆资源与环境保护职业学院",
    "重庆护理职业学院",
    "四川大学",
    "西南交通大学",
    "电子科技大学",
    "西南石油大学",
    "成都理工大学",
    "西南科技大学",
    "成都信息工程大学",
    "四川理工学院",
    "西华大学",
    "中国民用航空飞行学院",
    "四川农业大学",
    "西昌学院",
    "西南医科大学",
    "成都中医药大学",
    "川北医学院",
    "四川师范大学",
    "西华师范大学",
    "绵阳师范学院",
    "内江师范学院",
    "宜宾学院",
    "四川文理学院",
    "阿坝师范学院",
    "乐山师范学院",
    "西南财经大学",
    "成都体育学院",
    "四川音乐学院",
    "西南民族大学",
    "成都学院",
    "成都工业学院",
    "攀枝花学院",
    "四川旅游学院",
    "四川民族学院",
    "四川警察学院",
    "成都东软学院",
    "电子科技大学成都学院",
    "成都理工大学工程技术学院",
    "四川传媒学院",
    "成都信息工程大学银杏酒店管理学院",
    "成都文理学院",
    "四川工商学院",
    "四川外国语大学成都学院",
    "成都医学院",
    "四川工业科技学院",
    "四川大学锦城学院",
    "西南财经大学天府学院",
    "四川大学锦江学院",
    "四川文化艺术学院",
    "西南科技大学城市学院",
    "西南交通大学希望学院",
    "成都师范学院",
    "四川电影电视学院",
    "成都纺织高等专科学校",
    "民办四川天一学院",
    "成都航空职业技术学院",
    "四川电力职业技术学院",
    "成都职业技术学院",
    "四川化工职业技术学院",
    "四川水利职业技术学院",
    "南充职业技术学院",
    "内江职业技术学院",
    "四川航天职业技术学院",
    "四川邮电职业技术学院",
    "四川机电职业技术学院",
    "绵阳职业技术学院",
    "四川交通职业技术学院",
    "四川工商职业技术学院",
    "四川工程职业技术学院",
    "四川建筑职业技术学院",
    "达州职业技术学院",
    "四川托普信息技术职业学院",
    "四川国际标榜职业学院",
    "成都农业科技职业学院",
    "宜宾职业技术学院",
    "泸州职业技术学院",
    "眉山职业技术学院",
    "成都艺术职业学院",
    "四川职业技术学院",
    "乐山职业技术学院",
    "雅安职业技术学院",
    "四川商务职业学院",
    "四川司法警官职业学院",
    "广安职业技术学院",
    "四川信息职业技术学院",
    "四川文化传媒职业学院",
    "四川华新现代职业学院",
    "四川管理职业学院",
    "四川艺术职业学院",
    "四川中医药高等专科学校",
    "四川科技职业学院",
    "四川文化产业职业学院",
    "四川财经职业学院",
    "四川城市职业学院",
    "四川现代职业学院",
    "四川幼儿师范高等专科学校",
    "四川长江职业学院",
    "四川三河职业学院",
    "川北幼儿师范高等专科学校",
    "四川卫生康复职业学院",
    "四川汽车职业技术学院",
    "巴中职业技术学院",
    "四川希望汽车职业学院",
    "四川电子机械职业技术学院",
    "四川文轩职业学院",
    "川南幼儿师范高等专科学校",
    "四川护理职业学院",
    "成都工业职业技术学院",
    "四川西南航空职业学院",
    "成都工贸职业技术学院",
    "四川应用技术职业学院",
    "贵州大学",
    "贵州医科大学",
    "遵义医学院",
    "贵阳中医学院",
    "贵州师范大学",
    "遵义师范学院",
    "铜仁学院",
    "兴义民族师范学院",
    "安顺学院",
    "贵州工程应用技术学院",
    "凯里学院",
    "黔南民族师范学院",
    "贵州财经大学",
    "贵州民族大学",
    "贵阳学院",
    "六盘水师范学院",
    "贵州商学院",
    "贵阳中医学院时珍学院",
    "贵州财经大学商务学院",
    "贵州大学科技学院",
    "贵州大学明德学院",
    "贵州民族大学人文科技学院",
    "贵州师范大学求是学院",
    "遵义医学院医学与科技学院",
    "贵州医科大学神奇民族医药学院",
    "贵州师范学院",
    "贵州理工学院",
    "黔南民族医学高等专科学校",
    "贵州警官职业学院",
    "贵州交通职业技术学院",
    "贵州航天职业技术学院",
    "贵州电子信息职业技术学院",
    "安顺职业技术学院",
    "黔东南民族职业技术学院",
    "黔南民族职业技术学院",
    "遵义职业技术学院",
    "贵州城市职业学院",
    "贵州工业职业技术学院",
    "贵州电力职业技术学院",
    "六盘水职业技术学院",
    "铜仁职业技术学院",
    "黔西南民族职业技术学院",
    "贵州轻工职业技术学院",
    "遵义医药高等专科学校",
    "贵阳护理职业学院",
    "贵阳职业技术学院",
    "毕节职业技术学院",
    "贵州职业技术学院",
    "贵州盛华职业学院",
    "贵州工商职业学院",
    "贵阳幼儿师范高等专科学校",
    "铜仁幼儿师范高等专科学校",
    "黔南民族幼儿师范高等专科学校",
    "毕节医学高等专科学校",
    "贵州建设职业技术学院",
    "毕节幼儿师范高等专科学校",
    "贵州农业职业学院",
    "贵州工程职业学院",
    "贵州工贸职业学院",
    "贵州水利水电职业技术学院",
    "贵州电子商务职业技术学院",
    "贵州应用技术职业学院",
    "贵州电子科技职业学院",
    "贵州航空职业技术学院",
    "云南大学",
    "昆明理工大学",
    "云南农业大学",
    "西南林业大学",
    "昆明医科大学",
    "大理大学",
    "云南中医学院",
    "云南师范大学",
    "昭通学院",
    "曲靖师范学院",
    "普洱学院",
    "保山学院",
    "红河学院",
    "云南财经大学",
    "云南艺术学院",
    "云南民族大学",
    "玉溪师范学院",
    "楚雄师范学院",
    "云南警官学院",
    "昆明学院",
    "文山学院",
    "云南经济管理学院",
    "云南大学滇池学院",
    "云南大学旅游文化学院",
    "昆明理工大学津桥学院",
    "云南师范大学商学院",
    "云南师范大学文理学院",
    "昆明医科大学海源学院",
    "云南艺术学院文华学院",
    "云南工商学院",
    "滇西科技师范学院",
    "昆明冶金高等专科学校",
    "云南国土资源职业学院",
    "云南交通职业技术学院",
    "昆明工业职业技术学院",
    "云南农业职业技术学院",
    "云南司法警官职业学院",
    "云南文化艺术职业学院",
    "云南体育运动职业技术学院",
    "云南科技信息职业学院",
    "西双版纳职业技术学院",
    "昆明艺术职业学院",
    "玉溪农业职业技术学院",
    "云南能源职业技术学院",
    "云南国防工业职业技术学院",
    "云南机电职业技术学院",
    "云南林业职业技术学院",
    "云南城市建设职业学院",
    "云南工程职业学院",
    "曲靖医学高等专科学校",
    "楚雄医药高等专科学校",
    "保山中医药高等专科学校",
    "丽江师范高等专科学校",
    "德宏师范高等专科学校",
    "云南新兴职业学院",
    "云南锡业职业技术学院",
    "云南经贸外事职业学院",
    "云南三鑫职业技术学院",
    "德宏职业学院",
    "云南商务职业学院",
    "昆明卫生职业学院",
    "云南现代职业技术学院",
    "云南旅游职业学院",
    "红河卫生职业学院",
    "云南外事外语职业学院",
    "大理农林职业技术学院",
    "公安消防部队高等专科学校",
    "云南财经职业学院",
    "昆明铁道职业技术学院",
    "昭通卫生职业学院",
    "大理护理职业学院",
    "云南水利水电职业学院",
    "西藏大学",
    "西藏民族大学",
    "西藏藏医学院",
    "西藏警官高等专科学校",
    "拉萨师范高等专科学校",
    "西藏职业技术学院",
    "西北大学",
    "西安交通大学",
    "西北工业大学",
    "西安理工大学",
    "西安电子科技大学",
    "西安工业大学",
    "西安建筑科技大学",
    "西安科技大学",
    "西安石油大学",
    "陕西科技大学",
    "西安工程大学",
    "长安大学",
    "西北农林科技大学",
    "陕西中医药大学",
    "陕西师范大学",
    "延安大学",
    "陕西理工学院",
    "宝鸡文理学院",
    "咸阳师范学院",
    "渭南师范学院",
    "西安外国语大学",
    "西北政法大学",
    "西安体育学院",
    "西安音乐学院",
    "西安美术学院",
    "西安文理学院",
    "榆林学院",
    "商洛学院",
    "安康学院",
    "西安培华学院",
    "西安财经学院",
    "西安邮电大学",
    "西安航空学院",
    "西安医学院",
    "西安欧亚学院",
    "西安外事学院",
    "西安翻译学院",
    "西京学院",
    "西安思源学院",
    "陕西国际商贸学院",
    "陕西服装工程学院",
    "西安交通工程学院",
    "西安交通大学城市学院",
    "西北大学现代学院",
    "西安建筑科技大学华清学院",
    "西安财经学院行知学院",
    "陕西科技大学镐京学院",
    "西安工业大学北方信息工程学院",
    "延安大学西安创新学院",
    "西安电子科技大学长安学院",
    "西北工业大学明德学院",
    "长安大学兴华学院",
    "西安理工大学高科学院",
    "西安科技大学高新学院",
    "陕西学前师范学院",
    "陕西工业职业技术学院",
    "杨凌职业技术学院",
    "西安电力高等专科学校",
    "陕西能源职业技术学院",
    "陕西国防工业职业技术学院",
    "西安航空职业技术学院",
    "陕西财经职业技术学院",
    "陕西交通职业技术学院",
    "陕西职业技术学院",
    "西安高新科技职业学院",
    "西安城市建设职业学院",
    "陕西铁路工程职业技术学院",
    "宝鸡职业技术学院",
    "陕西航空职业技术学院",
    "陕西电子信息职业技术学院",
    "陕西邮电职业技术学院",
    "西安海棠职业学院",
    "西安汽车科技职业学院",
    "西安东方亚太职业技术学院",
    "陕西警官职业学院",
    "陕西经济管理职业技术学院",
    "西安铁路职业技术学院",
    "咸阳职业技术学院",
    "西安职业技术学院",
    "商洛职业技术学院",
    "汉中职业技术学院",
    "延安职业技术学院",
    "渭南职业技术学院",
    "安康职业技术学院",
    "铜川职业技术学院",
    "陕西青年职业学院",
    "陕西工商职业学院",
    "陕西电子科技职业学院",
    "陕西旅游烹饪职业学院",
    "西安医学高等专科学校",
    "榆林职业技术学院",
    "陕西艺术职业学院",
    "陕西机电职业技术学院",
    "兰州大学",
    "兰州理工大学",
    "兰州交通大学",
    "甘肃农业大学",
    "甘肃中医药大学",
    "西北师范大学",
    "兰州城市学院",
    "陇东学院",
    "天水师范学院",
    "河西学院",
    "兰州财经大学",
    "西北民族大学",
    "甘肃政法学院",
    "甘肃民族师范学院",
    "兰州文理学院",
    "甘肃医学院",
    "兰州工业学院",
    "西北师范大学知行学院",
    "兰州财经大学陇桥学院",
    "兰州财经大学长青学院",
    "兰州交通大学博文学院",
    "兰州理工大学技术工程学院",
    "兰州石化职业技术学院",
    "陇南师范高等专科学校",
    "定西师范高等专科学校",
    "甘肃建筑职业技术学院",
    "酒泉职业技术学院",
    "兰州外语职业学院",
    "兰州职业技术学院",
    "甘肃警察职业学院",
    "甘肃林业职业技术学院",
    "甘肃工业职业技术学院",
    "武威职业学院",
    "甘肃交通职业技术学院",
    "兰州资源环境职业技术学院",
    "甘肃农业职业技术学院",
    "甘肃畜牧工程职业技术学院",
    "甘肃钢铁职业技术学院",
    "甘肃机电职业技术学院",
    "甘肃有色冶金职业技术学院",
    "白银矿冶职业技术学院",
    "甘肃卫生职业学院",
    "兰州科技职业学院",
    "庆阳职业技术学院",
    "临夏现代职业学院",
    "甘肃能源化工职业学院",
    "兰州现代职业学院",
    "平凉职业技术学院",
    "甘肃财贸职业学院",
    "青海大学",
    "青海师范大学",
    "青海民族大学",
    "青海大学昆仑学院",
    "青海卫生职业技术学院",
    "青海警官职业学院",
    "青海畜牧兽医职业技术学院",
    "青海交通职业技术学院",
    "青海建筑职业技术学院",
    "西宁城市职业技术学院",
    "青海高等职业技术学院",
    "青海柴达木职业技术学院",
    "宁夏大学",
    "宁夏医科大学",
    "宁夏师范学院",
    "北方民族大学",
    "宁夏理工学院",
    "宁夏大学新华学院",
    "银川能源学院",
    "中国矿业大学银川学院",
    "宁夏民族职业技术学院",
    "宁夏工业职业学院",
    "宁夏职业技术学院",
    "宁夏工商职业技术学院",
    "宁夏财经职业技术学院",
    "宁夏司法警官职业学院",
    "宁夏建设职业技术学院",
    "宁夏葡萄酒与防沙治沙职业技术学院",
    "宁夏幼儿师范高等专科学校",
    "宁夏艺术职业学院",
    "新疆大学",
    "塔里木大学",
    "新疆农业大学",
    "石河子大学",
    "新疆医科大学",
    "新疆师范大学",
    "喀什大学",
    "伊犁师范学院",
    "新疆财经大学",
    "新疆艺术学院",
    "新疆工程学院",
    "昌吉学院",
    "新疆警察学院",
    "新疆大学科学技术学院",
    "新疆农业大学科学技术学院",
    "新疆医科大学厚博学院",
    "新疆财经大学商务学院",
    "石河子大学科技学院",
    "和田师范专科学校",
    "新疆农业职业技术学院",
    "乌鲁木齐职业大学",
    "新疆维吾尔医学专科学校",
    "克拉玛依职业技术学院",
    "新疆机电职业技术学院",
    "新疆轻工职业技术学院",
    "新疆能源职业技术学院",
    "昌吉职业技术学院",
    "伊犁职业技术学院",
    "阿克苏职业技术学院",
    "巴音郭楞职业技术学院",
    "新疆建设职业技术学院",
    "新疆兵团警官高等专科学校",
    "新疆现代职业技术学院",
    "新疆天山职业技术学院",
    "新疆交通职业技术学院",
    "新疆石河子职业技术学院",
    "新疆职业大学",
    "新疆体育职业技术学院",
    "新疆应用职业技术学院",
    "新疆师范高等专科学校",
    "新疆铁道职业技术学院",
    "新疆生产建设兵团兴新职业技术学院",
    "哈密职业技术学院",
    "新疆科技职业技术学院",
    "吐鲁番职业技术学院",
    "新疆工业职业技术学院"
]

telecoms = [
"010", "022", "021", "023", "0311", "0310", "0319", "0312", "0313", "0314", "0315", "0335", "0317", "0316", "0318", "0591", "0592", "0598", "0594", "0595", "0596", "0599", "0593", "0597", "0791", "0798", "0790", "0792", "0701", "0793", "0795", "0794", "0796", "0797", "0531", "0532", "0533", "0536", "0535", "0631", "0537", "0633", "0534", "0530", "0351", "0352", "0353", "0355", "0349", "0354", "0358", "0357", "0359", "0471", "0472", "0476", "0479", "0470", "0475", "0477", "0482", "0371", "0378", "0379", "0373", "0393", "0370", "0377", "0394", "0396", "024", "0411", "0412", "0413", "0414", "0415", "0416", "0417", "0418", "0419", "0410", "027", "0714", "0710", "0719", "0717", "0714", "0712", "0713", "0718", "0716", "0431", "0423", "0434", "0437", "0435", "0439", "0436", "0433", "0440", "0731", "0733", "0732", "0734", "0730", "0736", "0735", "0737", "0746", "0745", "0744", "0451", "0452", "0459", "0458", "0453", "0454", "0455", "0457", "0456", "020", "0755", "0756", "0754", "0751", "0752", "0769", "0760", "0757", "0759", "025", "0516", "0518", "0517", "0527", "0515", "0514", "0513", "0511", "0519", "0510", "0512", "0520", "0771", "0772", "0773", "0774", "0779", "0777", "0898", "0899", "0890", "028", "0812", "0838", "0816", "0813", "0832", "0833", "0830", "0831", "0571", "0574", "0573", "0572", "0575", "0579", "0570", "0580", "0577", "0576", "0851", "0852", "0853", "0858", "0551", "0554", "0552", "0555", "0556", "0559", "0550", "0557", "0565", "0563", "0871", "0870", "0874", "0877", "0879", "0888", "0873", "0878", "029", "0919", "0917", "0913", "0914", "0891", "0892", "08018", "08059", "0897", "0931", "0935", "0938", "0933", "0937", "0937", "0971", "0972", "0979", "0975", "0951", "0952", "0953", "0954", "0991", "0990", "0995", "0998", "0908", "0996", "00852", "00853", "00886"]

if __name__ == "__main__":
    import sys
    reload(sys)
    sys.setdefaultencoding("utf-8")

    data = {
        "telecom":{
            "name":"张文",
            "telecomRecords":[
                {
                    "call_place":"autodata(type='chinese',length=3)",
                    "call_time":"autodate('2016-12-13',0,datetype='day',outformat='timestamp',flag='calltime')",
                    "call_type":"autodata(type='sample',samples=['主叫','被叫'])",
                    "id":"autodata(type='abc',length=18)",
                    "other_number":"autodata(type='phone')",
                    "seconds":"autodata(type='int',length=(1,3))",
                    "type":"0"
                },5
            ],
        },
        "names":[
            "1",10
        ]
    }
    datas = deallist(data)
    print datas
    sampleStr = js.dumps(datas)
    datas = genData(sampleStr, 1)
    print js.dumps(datas[0])
    exit(0)
    #getZodiac("342425199711170736")
    print autodate(1,"2014-01-11 00:00:00",1,"day")
    #print randomMix(length=10)
    exit(0)
    print 1,autodata(type="number",length=3)
    print 1, autodata(type="number", length=(3,4))
    print 1, autodata(type=4, length=3)
    print 1, autodata(type=4, length=(3, 4))
    print 2,autodata(type="phone")
    print 2, autodata(type=1)
    print 3,autodata(type="email",length=(7,10))
    print 4,autodata(type="chinese",length=3),type(autodata(type="chinese",length=3))
    print 5,autodata(type="symbol",length=3)
    print 6,autodata(type="abc",length=3)
    print 7,autodata(type="idcard")

    for i in range(13):
        print 8,autodate(i,'2016-10-13',-i,'day')
        print 8,autodate(i,'2016-10-16 10:12:20',-i,'month',outformat="%H:%M:%S %Y-%m-%d")

    for i in range(5):
        print 9,autoint(i,20161116,-3)